-- MySQL Script generated by MySQL Workbench
-- 10/12/18 11:48:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OPSDev` DEFAULT CHARACTER SET utf8 ;
USE `OPSDev` ;

-- -----------------------------------------------------
-- Table `OPSDev`.`work_j`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j` (
  `work_j_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a J phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_number` INT UNSIGNED NOT NULL,
  `work_j_assoc_num` VARCHAR(45) NULL,
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the J phase.  Refers to values held in table \'work_status\'.',
  `work_j_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a J phase project.',
  `work_j_sow` TEXT NULL COMMENT 'Defines the statement of work for a J phase project.',
  `work_j_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the S phase entry was created.',
  PRIMARY KEY (`work_j_id`),
  INDEX `fk_work_status_id_idx` (`work_status_id` ASC),
  INDEX `fk_work_j-work_id_idx` (`work_id` ASC),
  CONSTRAINT `fk_work_j-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_j-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j - A child table that contains all relevant project information related J phase projects.  All child tables underneath this table will be begin with work_j_.\n\n';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_team` (
  `work_j_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a individual memebers of a team.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the employee who is part of the team. References \'employee_id\' of the table \'employee\'.',
  `work_j_team_leader` TINYINT(1) NULL COMMENT 'A flagging field to define an individual as a team leader.',
  `work_j_team_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change has been made to the record.',
  PRIMARY KEY (`work_j_team_id`),
  INDEX `fk_employee_id_idx` (`employee_id` ASC),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_team-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_team - A child table that holds all related employees assigned to the J phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_consultants` (
  `work_j_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `addr_id` INT UNSIGNED NOT NULL,
  `work_j_consultants_role` VARCHAR(45) NULL,
  `work_j_consultants_created` DATETIME NULL,
  `work_j_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_consultants_id`),
  INDEX `fk_addr_id_idx` (`addr_id` ASC),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_consultants-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_consultants - A child table that holds all related consultants that may be working on a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_milestones` (
  `work_j_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for milestone enrty for a J phase work project.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_common_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines a labeling of a milestone entry.  References \'common_eng_milestones_id\' on table \'common_eng_milestones\'.',
  `work_j_milestones_value` DATE NULL COMMENT 'Defines the value of the milestone in a DATE format.',
  `work_j_milestones_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP  ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was made.',
  PRIMARY KEY (`work_j_milestones_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_common_eng_milestones_idx` (`work_j_common_milestones_id` ASC),
  CONSTRAINT `fk_j_milestones-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_milestones-milestones_id`
    FOREIGN KEY (`work_j_common_milestones_id`)
    REFERENCES `OPSDev`.`common_eng_milestones` (`common_eng_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_milestones - A child table that holds all milestone events for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_manhours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_manhours` (
  `work_j_manhours_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a manhour entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `common_roles_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the labeling for a manhour entry.  References \'common_roles_id\' on the table \'common_roles\'.',
  `work_j_manhours_est` INT NULL COMMENT 'Defines the estimated hours set aside for a project.',
  `work_j_manhours_act` INT NULL COMMENT 'Defines the acutal number of hours spent on a project.',
  `work_j_manhours_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_manhours_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when the entry was updated.',
  PRIMARY KEY (`work_j_manhours_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_common_roles_id_idx` (`common_roles_id` ASC),
  CONSTRAINT `fk_j_manhours-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_manhours-roles_id`
    FOREIGN KEY (`common_roles_id`)
    REFERENCES `OPSDev`.`common_roles` (`common_roles_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_manhours - A child table that holds all programmed manhour information related to a J Phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_info` (
  `work_j_acct_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_istm` TINYINT(1) NULL,
  `work_j_acct_info_contract_value` DECIMAL(15,2) NULL,
  `work_j_acct_info_created` DATETIME NULL,
  `work_j_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_info_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_acctinfo-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_info - A child table that holds all relevant accounting information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_actions` (
  `work_j_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for an action assignment entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines who was assigned to the task.  References \'employee_id\' from table \'employee\'.',
  `work_j_actions_assigned` DATE NULL COMMENT 'Defines the date the assignment was given.',
  `work_j_actions_due` DATE NULL COMMENT 'Defines the date the assignment is due to be completed.',
  `work_j_actions_date_completed` DATE NULL COMMENT 'Defines the actual date of completion.',
  `work_j_actions_task` TEXT NULL COMMENT 'Defines the task assigned in plain text.',
  `work_j_actions_comments` TEXT NULL COMMENT 'Defines any comments related to an action assignment in plain text.',
  `work_j_actions_is_complete` TINYINT(1) NULL COMMENT 'A flagging field that defines if a task has been accomplished.',
  `work_j_actions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_actions_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_work_j_actions_employees_work_j_actions_assignedto_idx` (`work_j_actions_assignedto` ASC),
  CONSTRAINT `fk_j_actions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_actions-employees`
    FOREIGN KEY (`work_j_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_actions - A child table that holds all related action items/tasks for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_discussions` (
  `work_j_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a discussion entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_discussions_entry` TEXT NULL COMMENT 'Defines the discussion value in plain text.',
  `work_j_discussions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_discussions_id`),
  INDEX `fk_work_j_discussions_work_j_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_discussions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_discussions - A child table that holds all relevant discussions for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisub_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisub_log` (
  `work_j_rfisub_log_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for milestone enrty for a J phase SUB/RFI entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_rfisub_log_type` INT(1) NOT NULL COMMENT 'Defines if an entry is a submittal (0) or and rfi (1).',
  `work_j_rfisub_log_status` INT(1) NOT NULL DEFAULT 1 COMMENT 'Defines the status of an entry.  Values available...',
  `work_j_rfisub_log_internal_track` INT(5) NULL COMMENT 'Defines CDE\'s internal tracking number.',
  `work_j_rfisub_log_external_track` VARCHAR(45) NULL COMMENT 'Defines the external source tracking number.',
  `work_j_rfisub_log_receivedby` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Identifies who recieved the document from the \'employee\' table.',
  `work_j_rfisub_log_date_received` DATE NULL COMMENT 'Defines the date recieved.',
  `work_j_rfisub_log_qty_received` INT NULL COMMENT 'Defines the quantity recieved.',
  `work_j_rfisub_log_due_date` DATE NULL COMMENT 'Defines the due date.',
  `work_j_rfisub_log_subject` VARCHAR(255) NULL COMMENT 'Defines the subject of the SUB/RFI.',
  `work_j_rfisub_log_disposition` INT UNSIGNED NULL COMMENT 'Defines the pre-defined disposition.',
  `work_j_rfisub_log_notes` TEXT NULL COMMENT 'Defines any notes related to the SUBS/RFI.',
  `work_j_rfisub_log_date_returned` DATE NULL COMMENT 'Defines the date the documents were actually returned.',
  `work_j_rfisub_log_qty_returned` INT(3) NULL COMMENT 'Defines the quantity that was returned.',
  `work_j_rfisub_log_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_rfisub_log_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the record was performed.',
  PRIMARY KEY (`work_j_rfisub_log_id`),
  INDEX `fk_work_j_rfisub_log_common_rfisub_responses_work_j_rfisu_idx` (`work_j_rfisub_log_disposition` ASC),
  INDEX `fk_work_j_rfisub_log_work_j_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_work_j_rfisub_log_employee_work_j_rfisub_recievedby_idx` (`work_j_rfisub_log_receivedby` ASC),
  CONSTRAINT `fk_j_rfisub-responses`
    FOREIGN KEY (`work_j_rfisub_log_disposition`)
    REFERENCES `OPSDev`.`common_rfisub_responses` (`common_rfisub_responses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-recievedby`
    FOREIGN KEY (`work_j_rfisub_log_receivedby`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_rfisub_log - A Child table that holds all RFI/Submittal infromation for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisub_log_reviewers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisub_log_reviewers` (
  `work_j_rfisub_log_reviewers_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_rfisub_log_id` INT UNSIGNED NOT NULL,
  `work_j_rfisub_log_reviewers_employee` INT UNSIGNED NOT NULL,
  `work_j_rfisub_log_reviewers_consultants` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`work_j_rfisub_log_reviewers_id`),
  INDEX `fk_work_j_rfisub_log_reviewrs_employee_work_j_rfisub_log__idx` (`work_j_rfisub_log_reviewers_employee` ASC),
  INDEX `fk_work_j_rfisub_log_reviewers_workj_rfisub_log_work_j_lo_idx` (`work_j_rfisub_log_id` ASC),
  INDEX `fk_j_rfisubs-j_consultant_idx` (`work_j_rfisub_log_reviewers_consultants` ASC),
  CONSTRAINT `fk_j_rfisubs-employee`
    FOREIGN KEY (`work_j_rfisub_log_reviewers_employee`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-log_id`
    FOREIGN KEY (`work_j_rfisub_log_id`)
    REFERENCES `OPSDev`.`work_j_rfisub_log` (`work_j_rfisub_log_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-j_consultant`
    FOREIGN KEY (`work_j_rfisub_log_reviewers_consultants`)
    REFERENCES `OPSDev`.`work_j_consultants` (`work_j_consultants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_rfisubs_log_reviewers - A child table that holds all related reviewers of RFI/Submittal entries.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_delays` (
  `work_j_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a work delay entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_j_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_delays_reason` TEXT NULL COMMENT 'Defines the reason for a delay in plain text.',
  `work_j_delays_finalized_date` DATE NULL COMMENT 'Defines the date the delay was recognized.',
  `work_j_delays_cause` INT(1) NULL COMMENT 'A flagging field that will define if the delay was caused by an internal reason or an external reason (0 = Internal, 1 = external)',
  `work_j_delays_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_delays_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the record was performed.',
  PRIMARY KEY (`work_j_delays_id`),
  INDEX `fk_j_delays-work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_j_delays_work_j_milestones_id_idx` (`work_j_milestones_id` ASC),
  CONSTRAINT `fk_j_delays-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_delays_work_j_milestones_id`
    FOREIGN KEY (`work_j_milestones_id`)
    REFERENCES `OPSDev`.`work_j_milestones` (`work_j_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_delays - A child tbale that holds all related work delay information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_inv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_inv` (
  `work_j_acct_inv_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_acct_info_id` INT UNSIGNED NOT NULL,
  `work_j_acct_inv_amount` DECIMAL(10,2) NULL,
  `work_j_acct_inv_date` DATE NULL,
  `work_j_acct_inv_ispaid` TINYINT(1) NULL,
  `work_j_acct_inv_created` DATETIME NULL,
  `work_j_acct_inv_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_inv_id`),
  INDEX `fj_j_acct_inv-acct_info_id_idx` (`work_j_acct_info_id` ASC),
  CONSTRAINT `fk_j_acct_inv-acct_info_id`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_inv - A child table that holds the records of invoices applied to the J phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_subs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_subs` (
  `work_j_acct_subs_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a subs that are contracted.',
  `work_j_acct_info_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Refers to the \'work_j_acct_id\' column of the work_j_acct_info table.',
  `work_j_consultants` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Refers to the \'work_j_consultants_id\' column of the work_j_consultant table',
  `work_j_acct_subs_ca` DECIMAL(10,2) NULL COMMENT 'Contract amount agreed to by sub',
  `work_j_acct_subs_created` DATETIME NULL COMMENT 'Historical reference as to when a record was created.',
  `work_j_acct_subs_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change has been made to the record.',
  PRIMARY KEY (`work_j_acct_subs_id`),
  INDEX `fj_j_acct_subs-acct_info_id_idx` (`work_j_acct_info_id` ASC),
  INDEX `fj_j_acct_subs-j_consultants_idx` (`work_j_consultants` ASC),
  CONSTRAINT `fk_j_acct_subs-acct_info_id`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fj_j_acct_subs-j_consultants`
    FOREIGN KEY (`work_j_consultants`)
    REFERENCES `OPSDev`.`work_j_consultants` (`work_j_consultants_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_acc - A child tbale that holds all related work account information for subs.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_subs_inv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_subs_inv` (
  `work_j_acct_subs_inv_id` INT UNSIGNED NOT NULL COMMENT 'Primary Key.  Unique identifier for a subs that are contracted.',
  `work_j_acct_info_id` INT UNSIGNED NOT NULL,
  `work_j_acct_subs_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Refers to the \'work_j_acct_subs_id\' column in the work_j_acct_subs table.',
  `work_j_acct_subs_inv_number` VARCHAR(45) NOT NULL COMMENT 'The invoice number from sub.',
  `work_j_acct_subs_inv_amount` DECIMAL(10,2) NULL COMMENT 'Amount of the invoice.',
  `work_j_acct_subs_inv_date` DATE NULL COMMENT 'Date invoice was received.',
  `work_j_acct_subs_inv_ispaid` TINYINT(1) NULL COMMENT 'Flag to mark if invoice has been paid or not.',
  `work_j_acct_subs_inv_date_paid` DATE NULL COMMENT 'Date invocie was paid by CDE.',
  `work_j_acct_subs_inv_created` DATETIME NULL COMMENT 'Historical reference as to when a record was created.',
  `work_j_acct_subs_inv_updated` TIMESTAMP NULL COMMENT 'Historical reference as to when a record was updated.',
  PRIMARY KEY (`work_j_acct_subs_inv_id`),
  INDEX `fk_subs_inv-acct_subs_idx` (`work_j_acct_subs_id` ASC),
  INDEX `fk_subs_inv-acct_info_id_idx` (`work_j_acct_info_id` ASC),
  CONSTRAINT `fk_subs_inv-acct_subs_id`
    FOREIGN KEY (`work_j_acct_subs_id`)
    REFERENCES `OPSDev`.`work_j_acct_subs` (`work_j_acct_subs_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subs_inv-acct_info_id`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_info_notes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_info_notes` (
  `work_j_acct_info_notes_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_notes_text` TEXT NULL,
  `work_j_acct_info_notes_created` DATETIME NULL,
  `work_j_acct_info_notes_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_info_notes_id`),
  INDEX `fk_acct_info_notes-work_acct_info_idx` (`work_j_acct_info_id` ASC),
  CONSTRAINT `fk_j_acct_info_notes-work_acct_info`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_info_mods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_info_mods` (
  `work_j_acct_info_mods_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_mods_value` DECIMAL(10,2) NULL,
  `work_j_acct_info_mods_notes` TEXT NULL,
  `work_j_acct_info_mods_created` DATETIME NULL,
  `work_j_acct_info_mods_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_info_mods_id`),
  INDEX `fk_j_acct_info_mods-acct_info_idx` (`work_j_acct_info_id` ASC),
  CONSTRAINT `fk_j_acct_info_mods-acct_info`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `OPSDev` ;

-- -----------------------------------------------------
-- Placeholder table for view `OPSDev`.`view_work_j_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`view_work_j_milestones` (`work_j_milestones_id` INT, `work_j_id` INT, `common_eng_milestones_desc` INT, `common_eng_milestones_group` INT, `work_j_milestones_value` INT, `work_j_milestones_created` INT, `work_j_milestones_updated` INT);

-- -----------------------------------------------------
-- Placeholder table for view `OPSDev`.`view_addr_formal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`view_addr_formal` (`addr_id` INT, `addr_fname` INT, `addr_lname` INT, `addr_suffix` INT, `common_suffix_abbr` INT, `addr_org_id` INT, `addr_org` INT, `addr_org_phone` INT, `addr_org_fax` INT, `addr_address_1` INT, `addr_address_2` INT, `addr_city` INT, `addr_state` INT, `addr_postcode` INT, `'addr_country'` INT, `addr_org_phone_ext` INT, `addr_direct` INT, `addr_mobile` INT, `addr_email` INT);

-- -----------------------------------------------------
-- View `OPSDev`.`view_work_j_milestones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OPSDev`.`view_work_j_milestones`;
USE `OPSDev`;
CREATE  OR REPLACE VIEW `view_work_j_milestones` AS
SELECT 
work_j_milestones.work_j_milestones_id,
work_j_milestones.work_j_id,
common_eng_milestones.common_eng_milestones_desc,
common_eng_milestones.common_eng_milestones_group,
work_j_milestones.work_j_milestones_value,
work_j_milestones.work_j_milestones_created,
work_j_milestones.work_j_milestones_updated
FROM work_j_milestones 
LEFT JOIN common_eng_milestones
ON work_j_milestones.work_j_common_milestones_id = common_eng_milestones.common_eng_milestones_id
ORDER BY common_eng_milestones.common_eng_milestones_group, common_eng_milestones.common_eng_milestones_desc ASC;

-- -----------------------------------------------------
-- View `OPSDev`.`view_addr_formal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OPSDev`.`view_addr_formal`;
USE `OPSDev`;
CREATE  OR REPLACE VIEW `view_addr_formal` AS
SELECT 
addr_id, 
addr_fname, 
addr_lname, 
addr_suffix,
common_suffix_abbr,
addr_org_id, 
addr_orgs_name AS addr_org,
addr_org_phone,
addr_org_fax, 
addr_address_1, 
addr_address_2, 
addr_city, 
common_usstates_abbr AS addr_state, 
addr_postcode, 
common_countries_full AS 'addr_country', 
addr_org_phone_ext, 
addr_direct, 
addr_mobile,
addr_email 
FROM addr 
LEFT JOIN common_countries 
	ON common_countries_id = addr_country
LEFT JOIN common_usstates Organization 
	ON common_usstates_id = addr_state
LEFT JOIN addr_orgs
	ON addr_orgs_id = addr_org_id
LEFT JOIN common_suffix
	ON addr_suffix = common_suffix_id
ORDER BY addr_lname ASC;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
