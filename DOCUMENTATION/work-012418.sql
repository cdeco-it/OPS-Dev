-- MySQL Script generated by MySQL Workbench
-- 01/24/18 14:25:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OPSDev` DEFAULT CHARACTER SET utf8 ;
USE `OPSDev` ;

-- -----------------------------------------------------
-- Table `OPSDev`.`work_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_status` (
  `work_status_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_status_desc` VARCHAR(100) NULL,
  PRIMARY KEY (`work_status_id`))
ENGINE = InnoDB
COMMENT = 'work_status - A lookup table of all work status that a Work assignment as well as independent phases under a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j` (
  `work_j_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a J phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the J phase.  Refers to values held in table \'work_status\'.',
  `work_j_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a J phase project.',
  `work_j_sow` TEXT NULL COMMENT 'Defines the statement of work for a J phase project.',
  `work_j_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_update` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the S phase entry was created.',
  PRIMARY KEY (`work_j_id`),
  INDEX `fk_work_status_id_idx` (`work_status_id` ASC),
  INDEX `fk_work_j-work_id_idx` (`work_id` ASC),
  CONSTRAINT `fk_work_j-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_j-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j - A child table that contains all relevant project information related J phase projects.  All child tables underneath this table will be begin with work_j_.\n\n';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c` (
  `work_c_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a C phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the C phase. Refers to values held in table \'work_status\'.',
  `work_c_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a J phase project.',
  `work_c_sow` TEXT NULL COMMENT 'Defines the statement of work for a J phase project.',
  `work_c_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_c_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the C phase entry was created.',
  PRIMARY KEY (`work_c_id`),
  INDEX `fk_work_c_status_id_idx` (`work_status_id` ASC),
  INDEX `fk_c_work-work_id_idx` (`work_id` ASC),
  CONSTRAINT `fk_c_work-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_c_work-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_c - A child table that contains all relevant project informatino related to C phase projects.  All child tables underneath this table will begin with work_c_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s` (
  `work_s_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a S phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the S phase.  Refers to values held in table \'work_status\'.',
  `work_s_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines a percentage of completion for the S phase.',
  `work_s_sow` TEXT NULL COMMENT 'Statement of work definition in text',
  `work_s_created` DATETIME NULL COMMENT 'Historical reference as to when a change to the S phase entry was created.',
  `work_s_update` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was created.',
  PRIMARY KEY (`work_s_id`),
  INDEX `fk_work_s-work_status_id_idx` (`work_status_id` ASC),
  INDEX `fk_work_s-work-id_idx` (`work_id` ASC),
  CONSTRAINT `fk_work_s-work_status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s-work-id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_s - A child table that contains all relevant project informatino related to S phase projects.  All child tables underneath this table will begin with work_s_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p` (
  `work_p_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a P phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the P phase. Refers to values held in table \'work_status\'.',
  `work_p_fcv` DECIMAL(10,2) NULL DEFAULT 0.00 COMMENT 'Defines the Final contract value for a P phase project',
  `work_p_percentcomplete` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a P phase project.',
  `work_p_sow` TEXT NULL COMMENT 'Defines the statement of work for a P phase project.',
  `work_p_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_p_update` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the P phase entry was created',
  PRIMARY KEY (`work_p_id`),
  INDEX `fk_work_p-status_id_idx` (`work_status_id` ASC),
  INDEX `fk_work_p-work_id_idx` (`work_id` ASC),
  CONSTRAINT `fk_work_p-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_p-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_p - A child table that contains all relevant project information related P phase projects.  All child tables underneath this table will be begin with work_p_.\n\nfcv - final contract value\n\n';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b` (
  `work_b_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Work B ID',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.  ',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to WORK STATUS table.  Defines the status.',
  `work_b_fcv` DECIMAL(10,2) NULL DEFAULT 0.00 COMMENT 'Final Contract Value',
  `work_b_percentcomplete` DECIMAL(10,2) NULL COMMENT 'Percent Complete',
  `work_b_sow` TEXT NULL COMMENT 'Statement of Work',
  `work_b_created` DATETIME NULL COMMENT 'Initial creation date',
  `work_b_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_b_id`),
  INDEX `fk_work_b-status_id_idx` (`work_status_id` ASC),
  INDEX `fk_work_b-work_id_idx` (`work_id` ASC),
  CONSTRAINT `fk_work_b-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_b-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b - A chile table that holds all relvant infomrionat related to B phase projects.  All child tables underneat this table will begin with work_b_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work` (
  `work_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for work entries.',
  `work_year` YEAR NULL COMMENT 'Defines the archive year of the project in YEAR only format',
  `work_number` VARCHAR(10) NOT NULL COMMENT 'Defines the job number suffix.  Format is YY-XXX',
  `work_title` TEXT NOT NULL COMMENT 'Defines the title of the job.',
  `work_client` INT UNSIGNED NOT NULL COMMENT 'Foreign key to the \'ADDR\' table.',
  `work_client_rep` VARCHAR(150) NOT NULL COMMENT 'The name from the ADDR entry',
  `work_db` TINYINT(1) NULL COMMENT 'Defines if a project is a Design/Build project',
  `work_status` INT(1) UNSIGNED NOT NULL COMMENT 'Foreign Key that related to the work_status table.',
  `work_j_id` INT UNSIGNED NULL COMMENT 'Foreign Key to J phase.',
  `work_c_id` INT UNSIGNED NULL COMMENT 'Foreign key to C phase.',
  `work_p_id` INT UNSIGNED NULL COMMENT 'Foreign key to P phase.',
  `work_b_id` INT UNSIGNED NULL COMMENT 'Foreign key to B phase.',
  `work_s_id` INT UNSIGNED NULL COMMENT 'Foreign key to S phase.',
  `work_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was created.',
  PRIMARY KEY (`work_id`),
  INDEX `fk_work_status_idx` (`work_status` ASC),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_work_c_id_idx` (`work_c_id` ASC),
  INDEX `fk_work_s_id_idx` (`work_s_id` ASC),
  INDEX `fk_work_p_id_idx` (`work_p_id` ASC),
  INDEX `fk_client_id_idx` (`work_client` ASC),
  INDEX `fk_work_b_id_idx` (`work_b_id` ASC),
  CONSTRAINT `fk_work_status`
    FOREIGN KEY (`work_status`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_client_id`
    FOREIGN KEY (`work_client`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work - The master table for all work/projects.  All child tables underneath this table will begin with the previd work_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_team` (
  `work_j_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a individual memebers of a team.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the employee who is part of the team. References \'employee_id\' of the table \'employee\'.',
  `work_j_team_leader` TINYINT(1) NULL COMMENT 'A flagging field to define an individual as a team leader.',
  `work_j_team_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change has been made to the record.',
  PRIMARY KEY (`work_j_team_id`),
  INDEX `fk_employee_id_idx` (`employee_id` ASC),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_team-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_team - A child table that holds all related employees assigned to the J phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_consultants` (
  `work_j_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `addr_id` INT UNSIGNED NOT NULL,
  `work_j_consultants_role` VARCHAR(45) NULL,
  `work_j_consultants_created` DATETIME NULL,
  `work_j_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_consultants_id`),
  INDEX `fk_addr_id_idx` (`addr_id` ASC),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_consultants-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_consultants - A child table that holds all related consultants that may be working on a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_eng_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_eng_milestones` (
  `common_eng_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a common engineering milestone label.',
  `common_eng_milestones_desc` VARCHAR(255) NULL COMMENT 'Defines the actual label value of the engineering milestone.',
  PRIMARY KEY (`common_eng_milestones_id`))
ENGINE = InnoDB
COMMENT = 'common_eng_milestones - A lookup table of the most common engineering milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_milestones` (
  `work_j_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for milestone enrty for a J phase work project.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_common_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines a labeling of a milestone entry.  References \'common_eng_milestones_id\' on table \'common_eng_milestones\'.',
  `work_j_milestones_value` DATE NULL COMMENT 'Defines the value of the milestone in a DATE format.',
  `work_j_milestones_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP  ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was made.',
  PRIMARY KEY (`work_j_milestones_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_common_eng_milestones_idx` (`work_j_common_milestones_id` ASC),
  CONSTRAINT `fk_j_milestones-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_milestones-milestones_id`
    FOREIGN KEY (`work_j_common_milestones_id`)
    REFERENCES `OPSDev`.`common_eng_milestones` (`common_eng_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_milestones - A child table that holds all milestone events for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_manhours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_manhours` (
  `work_j_acct_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a manhour entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `common_roles_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the labeling for a manhour entry.  References \'common_roles_id\' on the table \'common_roles\'.',
  `work_j_accounting_est` INT NULL COMMENT 'Defines the estimated hours set aside for a project.',
  `work_j_accounting_act` INT NULL COMMENT 'Defines the acutal number of hours spent on a project.',
  PRIMARY KEY (`work_j_acct_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_common_roles_id_idx` (`common_roles_id` ASC),
  CONSTRAINT `fk_j_manhours-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_manhours-roles_id`
    FOREIGN KEY (`common_roles_id`)
    REFERENCES `OPSDev`.`common_roles` (`common_roles_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_manhours - A child table that holds all programmed manhour information related to a J Phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_info` (
  `work_j_acct_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_j_acct_info_istm` TINYINT(1) NULL,
  `work_j_acct_info_contract_value` DECIMAL(15,2) NULL,
  `work_j_acct_info_created` DATETIME NULL,
  `work_j_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_info_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_acctinfo-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_info - A child table that holds all relevant accounting information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_actions` (
  `work_j_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for an action assignment entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines who was assigned to the task.  References \'employee_id\' from table \'employee\'.',
  `work_j_actions_assigned` DATE NULL COMMENT 'Defines the date the assignment was given.',
  `work_j_actions_due` DATE NULL COMMENT 'Defines the date the assignment is due to be completed.',
  `work_j_actions_date_completed` DATE NULL COMMENT 'Defines the actual date of completion.',
  `work_j_actions_task` TEXT NULL COMMENT 'Defines the task assigned in plain text.',
  `work_j_actions_comments` TEXT NULL COMMENT 'Defines any comments related to an action assignment in plain text.',
  `work_j_actions_is_complete` TINYINT(1) NULL COMMENT 'A flagging field that defines if a task has been accomplished.',
  `work_j_actions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_actions_id`),
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_work_j_actions_employees_work_j_actions_assignedto_idx` (`work_j_actions_assignedto` ASC),
  CONSTRAINT `fk_j_actions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_actions-employees`
    FOREIGN KEY (`work_j_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_actions - A child table that holds all related action items/tasks for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_subcontractors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_subcontractors` (
  `work_c_subcontractors_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_c_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `addr_id` INT UNSIGNED NOT NULL,
  `work_c_subcontractors_role` VARCHAR(100) NULL,
  `work_c_subcontractors_created` DATETIME NULL,
  `work_c_subcontractors_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_c_subcontractors_id`),
  INDEX `fk_work_c_subcontractors_work_c_work_c_id_idx` (`work_c_id` ASC),
  INDEX `fk_work_c_subcontractor_addr_addr_id_idx` (`addr_id` ASC),
  CONSTRAINT `fk_c_subcontractors-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_subcontractor-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_c_subcontractors - A child table that holds all related subcontractors that may be working on a C phase Work assignment';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_team` (
  `work_c_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_c_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `employee_id` INT UNSIGNED NOT NULL,
  `work_c_team_leader` TINYINT(1) NULL,
  `work_c_team_created` DATETIME NULL,
  `work_c_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_c_team_id`),
  INDEX `fk_work_c_team_employeee_employee_id_idx` (`employee_id` ASC),
  INDEX `fk_work_c_team_work_c_work_c_id_idx` (`work_c_id` ASC),
  CONSTRAINT `fk_c_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_team-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_team - A child table that holds all related employees assigned to the C phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_cons_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_cons_milestones` (
  `common_cons_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_cons_milestones_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`common_cons_milestones_id`))
ENGINE = InnoDB
COMMENT = 'common_cons_milestones - A lookup table of the most common construction milestones for construction.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_milestones` (
  `work_c_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_c_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `common_cons_milestones_id` INT UNSIGNED NOT NULL,
  `work_c_milestones_value` DATE NULL,
  `work_c_milestones_created` DATETIME NULL,
  `work_c_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_c_milestones_id`),
  UNIQUE INDEX `work_c_milestones_created_UNIQUE` (`work_c_milestones_created` ASC),
  INDEX `fk_work_c_milestones_common_cons_milestones_common_cons_mil_idx` (`common_cons_milestones_id` ASC),
  INDEX `fk_work_c_milestones_work_c_work_c_id_idx` (`work_c_id` ASC),
  CONSTRAINT `fk_c_milestones-milestones_id`
    FOREIGN KEY (`common_cons_milestones_id`)
    REFERENCES `OPSDev`.`common_cons_milestones` (`common_cons_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_milestones-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_milestones - A child table that holds  all milestone events for a C phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_discussions` (
  `work_c_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_c_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_c_discussions_entry` TEXT NULL,
  `work_c_discussions_created` DATETIME NULL,
  `work_c_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_c_discussions_id`),
  INDEX `fk_work_c_discussions_work_c_work_c_id_idx` (`work_c_id` ASC),
  CONSTRAINT `fk_work_c_discussions_work_c_work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_discussions - A child table that holds all relevant disuccsions for C phase Work assignment';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_discussions` (
  `work_j_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a discussion entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_discussions_entry` TEXT NULL COMMENT 'Defines the discussion value in plain text.',
  `work_j_discussions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_discussions_id`),
  INDEX `fk_work_j_discussions_work_j_work_j_id_idx` (`work_j_id` ASC),
  CONSTRAINT `fk_j_discussions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_discussions - A child table that holds all relevant discussions for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_rfisubs_responses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_rfisubs_responses` (
  `common_rfisubs_responses_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_rfisubs_responses_type` INT(1) NULL,
  `common_rfisubs_responses_value` VARCHAR(100) NULL,
  PRIMARY KEY (`common_rfisubs_responses_id`))
ENGINE = InnoDB
COMMENT = 'common_rfisubs_responses - A lookup table containing the most typical RFI/Submittal responses.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisub_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisub_log` (
  `work_j_rfisub_log_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_j_rfisub_log_type` INT(1) NOT NULL,
  `work_j_rfisub_status` INT(1) NOT NULL DEFAULT 1,
  `work_j_rfisub_internal_track` INT(5) NULL,
  `work_j_rfisubs_external_track` VARCHAR(45) NULL,
  `work_j_rfisubs_recievedby` INT UNSIGNED NOT NULL,
  `work_j_rfisub_date_recieved` DATE NULL,
  `work_j_rfisub_log_qty_recieved` INT(3) NULL,
  `work_j_rfisub_log_due_date` DATE NULL,
  `work_j_rfisub_log_subject` VARCHAR(255) NULL,
  `work_j_rfisub_log_disposition` INT UNSIGNED NOT NULL,
  `work_j_rfisub_log_notes` TEXT NULL,
  `work_j_rfisub_date_returned` DATE NULL,
  `work_j_rfisub_log_qty_returned` INT(3) NULL,
  `work_j_rfisub_log_created` DATETIME NULL,
  `work_j_rfisub_log_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_rfisub_log_id`),
  INDEX `fk_work_j_rfisubs_log_common_rfisubs_responses_work_j_rfisu_idx` (`work_j_rfisub_log_disposition` ASC),
  INDEX `fk_work_j_rfisubs_log_work_j_work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_work_j_rfisubs_log_employee_work_j_rfisubs_recievedby_idx` (`work_j_rfisubs_recievedby` ASC),
  CONSTRAINT `fk_j_rfisub-responses`
    FOREIGN KEY (`work_j_rfisub_log_disposition`)
    REFERENCES `OPSDev`.`common_rfisubs_responses` (`common_rfisubs_responses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-recievedby`
    FOREIGN KEY (`work_j_rfisubs_recievedby`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_rfisub_log - A Child table that holds all RFI/Submittal infromation for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisubs_log_reviewers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisubs_log_reviewers` (
  `work_j_rfisubs_log_reviewers_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_rfisubs_log_id` INT UNSIGNED NOT NULL,
  `work_j_rfisubs_log_reviewers_employee` INT UNSIGNED NULL,
  `work_j_rfisubs_log_reviewers_consultants` INT UNSIGNED NULL,
  PRIMARY KEY (`work_j_rfisubs_log_reviewers_id`),
  INDEX `fk_work_j_rfisubs_log_reviewers_work_j_consulants_addr_work_idx` (`work_j_rfisubs_log_reviewers_consultants` ASC),
  INDEX `fk_work_j_rfisubs_log_reviewrs_employee_work_j_rfisubs_log__idx` (`work_j_rfisubs_log_reviewers_employee` ASC),
  INDEX `fk_work_j_rfisubs_log_reviewers_workj_rfisubs_log_work_j_lo_idx` (`work_j_rfisubs_log_id` ASC),
  CONSTRAINT `fk_j_rfisubs-consultants`
    FOREIGN KEY (`work_j_rfisubs_log_reviewers_consultants`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-employee`
    FOREIGN KEY (`work_j_rfisubs_log_reviewers_employee`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-log_id`
    FOREIGN KEY (`work_j_rfisubs_log_id`)
    REFERENCES `OPSDev`.`work_j_rfisub_log` (`work_j_rfisub_log_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_rfisubs_log_reviewers - A child table that holds all related reviewers of RFI/Submittal entries.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_delays` (
  `work_j_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a work delay entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_j_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_delays_reason` TEXT NULL COMMENT 'Defines the reason for a delay in plain text.',
  `work_j_delays_finalized_date` DATE NULL COMMENT 'Defines the date the delay was recognized.',
  `work_j_delays_cause` INT(1) NULL COMMENT 'A flagging field that will define if the delay was caused by an internal reason or an external reason (0 = Internal, 1 = external)',
  `work_j_delays_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_delays_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the record was performed.',
  PRIMARY KEY (`work_j_delays_id`),
  INDEX `fk_j_delays-work_j_id_idx` (`work_j_id` ASC),
  INDEX `fk_j_delays_work_j_milestones_id_idx` (`work_j_milestones_id` ASC),
  CONSTRAINT `fk_j_delays-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_delays_work_j_milestones_id`
    FOREIGN KEY (`work_j_milestones_id`)
    REFERENCES `OPSDev`.`work_j_milestones` (`work_j_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_delays - A child tbale that holds all related work delay information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_prop_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_prop_milestones` (
  `common_prop_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_prop_milestones_desc` VARCHAR(255) NULL,
  PRIMARY KEY (`common_prop_milestones_id`))
ENGINE = InnoDB
COMMENT = 'common_prop_milestones - A lookup table of the most common proposal milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_milestones` (
  `work_p_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_p_common_milestones_id` INT UNSIGNED NOT NULL,
  `work_p_milestones_value` DATE NULL,
  `work_p_milestones_created` DATETIME NULL,
  `work_p_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_milestones_id`),
  INDEX `fk_work_p_id-work_id_idx` (`work_p_id` ASC),
  INDEX `fk_common_milestones-prop_ms_id_idx` (`work_p_common_milestones_id` ASC),
  CONSTRAINT `fk_work_p_id-work_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_common_milestones-prop_ms_id`
    FOREIGN KEY (`work_p_common_milestones_id`)
    REFERENCES `OPSDev`.`common_prop_milestones` (`common_prop_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_milestones - A child table that holds all milestone events for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_delays` (
  `work_p_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_p_milestones_id` INT UNSIGNED NOT NULL,
  `work_p_delays_reason` TEXT NULL,
  `work_p_delays_finalized_date` DATE NULL,
  `work_p_delays_caused` INT(1) NULL,
  `work_p_created` DATETIME NULL,
  `work_p_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_delays_id`),
  INDEX `fk_p_delays-work_p_id_idx` (`work_p_id` ASC),
  INDEX `fk_p_delays-milestones_id_idx` (`work_p_milestones_id` ASC),
  CONSTRAINT `fk_p_delays-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_delays-work_p_milestones_id`
    FOREIGN KEY (`work_p_milestones_id`)
    REFERENCES `OPSDev`.`work_p_milestones` (`work_p_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_delays - A child tbale that holds all related work delay information for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_discussions` (
  `work_p_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_p_discussions_entry` TEXT NULL,
  `work_p_discussions_created` DATETIME NULL,
  `work_p_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_discussions_id`),
  INDEX `fk_p_discussions-work_p_id_idx` (`work_p_id` ASC),
  CONSTRAINT `fk_p_discussions-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_discussions - A child table that holds all relevant discussions for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_team` (
  `work_p_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `employee_id` INT UNSIGNED NOT NULL,
  `work_p_team_leader` TINYINT(1) NULL,
  `work_p_team_created` DATETIME NULL,
  `work_p_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_team_id`),
  INDEX `fk_p_team-work_p_id_idx` (`work_p_id` ASC),
  INDEX `fk_p_team-employee_id_idx` (`employee_id` ASC),
  CONSTRAINT `fk_p_team-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_team - A child table that holds all related employees assigned to the P phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_actions` (
  `work_p_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_p_actions_assignedto` INT UNSIGNED NOT NULL,
  `work_p_actions_assigned` DATE NULL,
  `work_p_actions_due` DATE NULL,
  `work_p_actions_date_completed` DATE NULL,
  `work_p_actions_task` TEXT NULL,
  `work_p_actions_comments` TEXT NULL,
  `work_p_actions_is_complete` TINYINT(1) NULL,
  `work_p_actions_created` DATETIME NULL,
  `work_p_actions_timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_actions_id`),
  INDEX `fk_p_actions-p_id_idx` (`work_p_id` ASC),
  INDEX `fk_p_actions_assignedto-employee_id_idx` (`work_p_actions_assignedto` ASC),
  CONSTRAINT `fk_p_actions-p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_actions_assignedto-employee_id`
    FOREIGN KEY (`work_p_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_actions - A child table that holds all related action items/tasks for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_consultants` (
  `work_p_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `addr_id` INT UNSIGNED NOT NULL,
  `work_p_consultants_role` VARCHAR(45) NULL,
  `work_p_consultants_created` DATETIME NULL,
  `work_p_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_consultants_id`),
  INDEX `fk_p_consultants-p_id_idx` (`work_p_id` ASC),
  INDEX `fk_p_consultants-addr_id_idx` (`addr_id` ASC),
  CONSTRAINT `fk_p_consultants-p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_consultants - A child table that holds all related consultants that may be working on a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_acct_info` (
  `work_p_acct_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_p_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_p_acct_info_amt` DECIMAL(10,2) NULL,
  `work_p_acct_info_submitted` DATE NULL,
  `work_p_acct_info_isrevision` TINYINT(1) NULL,
  `work_p_acct_info_awarded` TINYINT(1) NULL,
  `work_p_acct_info_created` DATETIME NULL,
  `work_p_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_p_acct_id`),
  INDEX `fk_p_acct-work_p_id_idx` (`work_p_id` ASC),
  CONSTRAINT `fk_p_acct_info-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_acct_info - A child table that holds all relevant accounting information for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_support_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_support_milestones` (
  `common_support_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A uniquie identifier for a support milestone.',
  `common_support_milestones_desc` VARCHAR(45) NULL COMMENT 'The descriptive value of a single milestone.',
  PRIMARY KEY (`common_support_milestones_id`))
ENGINE = InnoDB
COMMENT = 'common_support_milestones - A lookup table of the most common support  milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_milestones` (
  `work_s_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a S phase milestone entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Reference to the master record in table \'work\'.',
  `work_s_common_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the descrptive labeling of a milestone.  References table \'common_support_milestones\'.',
  `work_s_milestones_value` DATE NULL COMMENT 'Defines the due date of the milestone.',
  `work_s_milestones_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_milestones_id`),
  INDEX `fk_work_s_milestones-common_milestones_id_idx` (`work_s_common_milestones_id` ASC),
  INDEX `fk_work_s_milestones-work_s_id_idx` (`work_s_id` ASC),
  CONSTRAINT `fk_work_s_milestones-common_milestones_id`
    FOREIGN KEY (`work_s_common_milestones_id`)
    REFERENCES `OPSDev`.`common_support_milestones` (`common_support_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_milestones-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_milestones - A child table that holds all milestone events for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_delays` (
  `work_s_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work delay entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_s_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References a milestone value that has been impacted by delay.  References \'work_s_milestones_id\' on table \'work_s_milestones\'.',
  `work_s_delays_reason` TEXT NULL COMMENT 'Reason for delay written in plain text.',
  `work_s_delays_finalized_date` DATE NULL,
  `work_s_delays_cause` INT(1) NULL COMMENT 'An identifier table to mark if a delay was caused by internal issues (value = 0) or external issues (value = 1)',
  `work_s_delays_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_delays_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_delays_id`),
  INDEX `fk_work_s_delays-work_s_id_idx` (`work_s_id` ASC),
  INDEX `fk_work_s_delays-work_s_milestones_id_idx` (`work_s_milestones_id` ASC),
  CONSTRAINT `fk_work_s_delays-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_delays-work_s_milestones_id`
    FOREIGN KEY (`work_s_milestones_id`)
    REFERENCES `OPSDev`.`work_s_milestones` (`work_s_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_delays - A child tbale that holds all related work delay information for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_manhours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_manhours` (
  `work_s_manhours_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a manhour entry in S phase.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_id\' on parent table \'work\'.',
  `common_roles_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the label of the manhour entry.  References \'common_roles_id\' on table \'common_roles\'.',
  `work_s_manhours_accounting_est` INT NULL COMMENT 'Defines the values of ESTIMATED manhours prescribed for an S phase manhour entry.',
  `work_s_manhours_accounting_act` INT NULL COMMENT 'Defines the values of ACTUAL manhours prescribed for an S phase manhour entry.',
  PRIMARY KEY (`work_s_manhours_id`),
  INDEX `fk_work_s_manhours-common_roles_id_idx` (`common_roles_id` ASC),
  INDEX `fk_work_s_manhours-work_s_id_idx` (`work_s_id` ASC),
  CONSTRAINT `fk_work_s_manhours-common_roles_id`
    FOREIGN KEY (`common_roles_id`)
    REFERENCES `OPSDev`.`common_roles` (`common_roles_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_manhours-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_manhours - A child table that holds all programmed manhour information related to a S Phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_discussions` (
  `work_s_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a S phase discussion entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_id\' on parent table \'work\'.',
  `work_s_discussions_entry` TEXT NULL COMMENT 'Discussion entry in plain text.',
  `work_s_discussions_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_discussions_updated` TIMESTAMP NULL COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_discussions_id`),
  INDEX `fk_work_s_discussions-work_s_id_idx` (`work_s_id` ASC),
  CONSTRAINT `fk_work_s_discussions-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_discussions - A child table that holds all relevant discussions for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_actions` (
  `work_s_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a action assignment entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'work_id\' on master table \'work\'.',
  `work_s_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines who an action task was assigned.  References \'employee_id\' from table \'employees\'.',
  `work_s_actions_assigned` DATE NULL COMMENT 'Defines the date the action assignment was assigned.',
  `work_s_actions_due` DATE NULL COMMENT 'Defines the due date of a particular action assignment entry.',
  `work_s_actions_date_completed` DATE NULL COMMENT 'Defines the actual date the action task was completed.',
  `work_s_actions_task` TEXT NULL COMMENT 'Definition of the task assigned in plain text.',
  `work_s_actions_comments` TEXT NULL COMMENT 'Defines any comments related to an action task entry.',
  `work_s_actions_is_complete` TINYINT(1) NULL COMMENT 'A flagging field to define if a item has been completed or not. (0 = false; 1 = true).',
  `work_s_actions_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_actions_id`),
  INDEX `fk_work_s_actions-work_s_id_idx` (`work_s_id` ASC),
  INDEX `fk_work_s_assignedto-employee_id_idx` (`work_s_actions_assignedto` ASC),
  CONSTRAINT `fk_work_s_actions-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_assignedto-employee_id`
    FOREIGN KEY (`work_s_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_actions - A child table that holds all related action items/tasks for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_team` (
  `work_s_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work team entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References to \'work_id\' on master table \'work\'.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References a \'employee_id\' on the table \'employee\'.',
  `work_s_team_leader` TINYINT(1) NULL COMMENT 'A flagging field to designate the entry as the team leader (0 = false; 1 = true).',
  `work_s_team_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_team_id`),
  INDEX `fk_work_s_team-employee_id_idx` (`employee_id` ASC),
  INDEX `fk_work_s_team-work_s_id_idx` (`work_s_id` ASC),
  CONSTRAINT `fk_work_s_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_team-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_team - A child table that holds all related employees assigned to the S phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_consultants` (
  `work_s_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for S phase work consultant entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References the \'work_s_id\' on the parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References the \'work_id\' value on the master table \'work\'.',
  `addr_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines a consultant for the entry.  References \'addr_id\' on the \'addr\' table.',
  `work_s_consultants_role` VARCHAR(45) NULL COMMENT 'Defines the role a consultant plays on the S phase in plain text.',
  `work_s_consultants_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_consultants_id`),
  INDEX `fk_work_s_consultants-work_s_id_idx` (`work_s_id` ASC),
  INDEX `fk_work_s_consultants-addr_id_idx` (`addr_id` ASC),
  CONSTRAINT `fk_work_s_consultants-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_consultants - A child table that holds all related consultants that may be working on a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_acct_info` (
  `work_s_acct_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_s_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_s_acct_info_istm` TINYINT(1) NULL COMMENT 'A flagging field to define if a S phase is a Time and Materials job.',
  `work_s_acct_info_pinv` DECIMAL(10,2) NULL COMMENT 'Defines the current amount invoiced.',
  `work_s_acct_info_last_invoice_date` DATE NULL COMMENT 'Defines the last date of invoice.',
  `work_s_acct_info_contract_value` DECIMAL(15,2) NULL COMMENT 'Defines the dollar amount of a S phase work.',
  `work_s_acct_info_amount_inv_todate` DECIMAL(15,2) NULL COMMENT 'Defines the acutal amount invoiced to date.',
  `work_s_acct_info_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_acct_info_id`),
  INDEX `fk_work_s_acct_info-work_s_id_idx` (`work_s_id` ASC),
  CONSTRAINT `fk_work_s_acct_info-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_acct_info - A child table that holds all relevant accounting information for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_rfisubs_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_rfisubs_log` (
  `work_s_rfisubs_log_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_s_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `work_s_rfisubs_log_type` INT(1) NOT NULL COMMENT 'Flagging field to define if an entry is a RFI or Submittal (0 = RFI; 1 = Submittal).',
  `work_s_rfisubs_log_status` INT NOT NULL COMMENT 'A flagging field to define the status of a RFILOG entery. (0 = closed; 1 = open)',
  `work_s_rfisubs_log_internal_track` INT(5) NULL COMMENT 'Defines a INTERNAL tracking number for the entry',
  `work_s_rfisubs_log_external_track` VARCHAR(45) NULL COMMENT 'Defines the EXTERNAL tracking number from client organization',
  `work_s_rfisubs_log_receivedby` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'employee_id\' on the table \'employee\'.',
  `work_s_rfisubs_log_qty_recieved` INT NULL COMMENT 'Defines the quantity of inquries recieved from other party.',
  `work_s_rfisubs_log_due_date` DATE NULL COMMENT 'Defines the due date of the entry.',
  `work_s_rfisubs_log_subject` VARCHAR(255) NULL COMMENT 'Defines the subject matter of the RFISUB entry.',
  `work_s_rfisubs_log_disposition` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'common_rfisubs_responses_id\' on table \'common_rfisubs_responses\' table.',
  `work_s_rfisubs_log_notes` TEXT NULL COMMENT 'Defines and notes on the entry in plaintext.',
  `work_s_rfisubs_log_date_returned` DATE NULL COMMENT 'Defines the date the response was returned.',
  `work_s_rfisubs_log_qty_returned` INT(3) NULL COMMENT 'Defines the amount of responses returned',
  `work_s_rfisubs_log_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_rfisubs_log_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_rfisubs_log_id`),
  INDEX `fk_work_s_rfisubs_log-work_s_id_idx` (`work_s_id` ASC),
  INDEX `fk_work_s-rfisubs_log-employee_id_idx` (`work_s_rfisubs_log_receivedby` ASC),
  INDEX `fk_work_s_rfisubs_log-response_id_idx` (`work_s_rfisubs_log_disposition` ASC),
  CONSTRAINT `fk_work_s_rfisubs_log-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s-rfisubs_log-employee_id`
    FOREIGN KEY (`work_s_rfisubs_log_receivedby`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfisubs_log-response_id`
    FOREIGN KEY (`work_s_rfisubs_log_disposition`)
    REFERENCES `OPSDev`.`common_rfisubs_responses` (`common_rfisubs_responses_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_rfisub_log - A Child table that holds all RFI/Submittal infromation for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_rfisubs_log_reviewers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_rfisubs_log_reviewers` (
  `work_s_rfisubs_log_reviewers_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_s_rfisubs_log_id` INT UNSIGNED NOT NULL,
  `work_s_rfisubs_log_reviewers_employee` INT UNSIGNED NULL,
  `work_s_rfisubs_log_reviewers_consultants` INT UNSIGNED NULL,
  PRIMARY KEY (`work_s_rfisubs_log_reviewers_id`),
  INDEX `fk_work_s_rfi-employee_id_idx` (`work_s_rfisubs_log_reviewers_employee` ASC),
  INDEX `fk_work_s_rfi-addr_ir_idx` (`work_s_rfisubs_log_reviewers_consultants` ASC),
  INDEX `fk_work_s_rfi-rfilog_id_idx` (`work_s_rfisubs_log_id` ASC),
  CONSTRAINT `fk_work_s_rfi-employee_id`
    FOREIGN KEY (`work_s_rfisubs_log_reviewers_employee`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfi-addr_ir`
    FOREIGN KEY (`work_s_rfisubs_log_reviewers_consultants`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfi-rfilog_id`
    FOREIGN KEY (`work_s_rfisubs_log_id`)
    REFERENCES `OPSDev`.`work_s_rfisubs_log` (`work_s_rfisubs_log_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_rfisubs_log_reviewers - A child table that holds all related reviewers of RFI/Submittal entries.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_work_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_work_tags` (
  `common_work_tags_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_work_tags_desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`common_work_tags_id`))
ENGINE = InnoDB
COMMENT = 'common_work_tags - A lookup table of the most common tags that associate a work item or work phase to a definition.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_tags` (
  `work_tags_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work tag entry.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Used to associate an entry to a particular work entry. References \'work_id\' from table \'work\'.',
  `common_work_tags_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Used to define a tag that is associated to the entry.  References \'common_work_tags_id\' from table \'common_work_tags\'.',
  PRIMARY KEY (`work_tags_id`),
  INDEX `fk_work_tags-work_id_idx` (`work_id` ASC),
  INDEX `fk_common_tags-common_tags_id_idx` (`common_work_tags_id` ASC),
  CONSTRAINT `fk_work_tags-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_common_tags-common_tags_id`
    FOREIGN KEY (`common_work_tags_id`)
    REFERENCES `OPSDev`.`common_work_tags` (`common_work_tags_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_tags - A table that holds tagging information for each work entry.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_inv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_inv` (
  `work_j_acct_inv_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_acct_info_id` INT UNSIGNED NOT NULL,
  `work_j_acct_inv_amount` DECIMAL(10,2) NULL,
  `work_j_acct_inv_date` DATE NULL,
  `work_j_acct_inv_ispaid` TINYINT(1) NULL,
  `work_j_acct_inv_created` DATETIME NULL,
  `work_j_acct_inv_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_j_acct_inv_id`),
  INDEX `fj_j_acct_inv-acct_info_id_idx` (`work_j_acct_info_id` ASC),
  CONSTRAINT `fj_j_acct_inv-acct_info_id`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_inv - A child table that holds the records of invoices applied to the J phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_subs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_subs` (
  `work_j_acct_subs_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `work_j_id` INT UNSIGNED NOT NULL,
  `work_id` INT UNSIGNED NOT NULL,
  `addr_id` INT UNSIGNED NOT NULL,
  `work_j_acct_subs_role` VARCHAR(45) NULL,
  `work_j_acct_subs_created` DATETIME NULL,
  `work_j_acct_subs_updated` TIMESTAMP NULL,
  PRIMARY KEY (`work_j_acct_subs_id`))
ENGINE = InnoDB
COMMENT = 'work_j_acct_subs - A child table that holds all subs assigned to work on a J phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_subcontractors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_subcontractors` (
  `work_b_subcontractors_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Subcontractor ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `addr_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to address table.  Defines the address of the subcontractor.',
  `work_b_subcontractors_role` TEXT NULL COMMENT 'Defines the role of subcontractor.',
  `work_b_subcontractors_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_subcontractors_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `work_b_subcontractorscol` VARCHAR(45) NULL,
  PRIMARY KEY (`work_b_subcontractors_id`),
  INDEX `fk_b_subconsultants_work_id_idx` (`work_b_id` ASC),
  INDEX `fk_b_subcontractors_addr_id_idx` (`addr_id` ASC),
  CONSTRAINT `fk_b_subcontractors-work_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_subcontractors-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_subcontractor - A child table that holds all related subcontractors that participate in the B phase work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_team` (
  `work_b_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Team ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work_B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Employee table.  Defines a member of the team.',
  `work_b_team_leader` TINYINT(1) NULL COMMENT 'Defines a team leader',
  `work_b_team_created` DATETIME NULL COMMENT 'Initial creation date',
  `work_b_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_b_team_id`),
  INDEX `fk_b_team_work_id_idx` (`work_b_id` ASC),
  INDEX `fk_b_team_employee_id_idx` (`employee_id` ASC),
  CONSTRAINT `fk_b_team-work_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_team - A child table that holds all the associated internal team members to a B phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_discussions` (
  `work_b_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Discussion ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `work_b_discussions_entry` TEXT NULL COMMENT 'Discussion entry.',
  `work_b_discussions_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_discussions_updated` TIMESTAMP NOT NULL,
  PRIMARY KEY (`work_b_discussions_id`, `work_b_discussions_updated`),
  INDEX `fk_b_discussions-work_b_id_idx` (`work_b_id` ASC),
  CONSTRAINT `fk_b_discussions-work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_discussions - A child table that holds all discussions related to the B phase work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_actions` (
  `work_b_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Actions ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work_B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table',
  `work_b_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to the Employee table.  Dictates whom the action was assigned to.',
  `work_b_actions_assigned` DATE NULL COMMENT 'Date assigned.',
  `work_b_actions_date_completed` DATE NULL COMMENT 'Date completed.',
  `work_b_actions_task` TEXT NULL COMMENT 'Details of the Task.',
  `work_b_actions_comments` TEXT NULL COMMENT 'Comments about task.',
  `work_b_actions_is_complete` TINYINT(1) NULL COMMENT 'Marks an action as complete.',
  `work_b_actions_created` DATETIME NULL COMMENT 'Initial creation date.',
  `work_b_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_b_actions_id`),
  INDEX `fk_b_actions-work_b_id_idx` (`work_b_id` ASC),
  INDEX `fk_b_actions-employee_id_idx` (`work_b_actions_assignedto` ASC),
  CONSTRAINT `fk_b_actions-work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_actions-employee_id`
    FOREIGN KEY (`work_b_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_actions - A child table that contains all register of actions.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_milestones` (
  `work_b_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Milestons ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `work_b_milestones_common_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Common Cons Milestones table.',
  `work_b_milestones_value` DATE NULL COMMENT 'Date of milestone.',
  `work_b_milestones_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`work_b_milestones_id`),
  INDEX `fk_b_milestones-common_cons_milestones_id_idx` (`work_b_milestones_common_id` ASC),
  INDEX `fk_b_milestones-b-id_idx` (`work_b_id` ASC),
  CONSTRAINT `fk_b_milestones-common_cons_milestones_id`
    FOREIGN KEY (`work_b_milestones_common_id`)
    REFERENCES `OPSDev`.`common_cons_milestones` (`common_cons_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_milestones-b-id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_milestones - A child table that holds all relevant milestones related to a B phase project.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
