-- MySQL Script generated by MySQL Workbench
-- Wed Feb  7 21:02:25 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OPSDev` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `OPSDev` ;

-- -----------------------------------------------------
-- Table `OPSDev`.`common_usstates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_usstates` (
  `common_usstates_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_usstates_abbr` VARCHAR(2) NULL COMMENT '',
  `common_usstates_full` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`common_usstates_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_usstates - A lookup table containing the two letter abbreviation and complete spelling of US states.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_countries` (
  `common_countries_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_countries_abbr` VARCHAR(2) NULL COMMENT '',
  `common_countries_full` VARCHAR(80) NULL COMMENT '',
  `common_countries_proper` VARCHAR(80) NULL COMMENT '',
  `common_countries_iso3` CHAR(3) NULL COMMENT '',
  `common_countries_numcode` SMALLINT(6) NULL COMMENT '',
  `common_countries_phonecode` INT(3) NULL COMMENT '',
  `common_countries_idd` INT(3) NULL COMMENT '',
  PRIMARY KEY (`common_countries_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_countries - A lookup table holding two letter abbreviations and full spelings of countries throughout the world.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_suffix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_suffix` (
  `common_suffix_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_suffix_abbr` VARCHAR(45) NULL COMMENT '',
  `common_suffix_desc` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`common_suffix_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_prefix - A lookup table of the most common name suffixes.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_prefix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_prefix` (
  `common_prefix_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_prefix_abbr` VARCHAR(45) NULL COMMENT '',
  `common_prefix_desc` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`common_prefix_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_prefix - A lookup table of the most common name prefixes.';


-- -----------------------------------------------------
-- Table `OPSDev`.`addr_orgs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`addr_orgs` (
  `addr_orgs_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `addr_orgs_name` TEXT NULL COMMENT '',
  PRIMARY KEY (`addr_orgs_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'addr_orgs - A simple lookup table of common organization names used throughout the site.  Related to addr.s';


-- -----------------------------------------------------
-- Table `OPSDev`.`addr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`addr` (
  `addr_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for an address entry.',
  `addr_prefix` INT UNSIGNED NULL COMMENT 'Foreign Key.  Defines a formal title name prefix.  References \'common_prefix_id\' from table \'common_prefix\'. (RF)',
  `addr_fname` VARCHAR(30) NULL COMMENT 'Defines the first name of the entry. (RF)',
  `addr_lname` VARCHAR(30) NULL COMMENT 'Defines the last name of the entry. (RF)',
  `addr_mname` VARCHAR(30) NULL COMMENT 'Defines the middle name of the entry (Optional field)',
  `addr_nname` VARCHAR(30) NULL COMMENT 'Defines a nickname or alternate common name for the entry.',
  `addr_suffix` INT UNSIGNED NULL COMMENT 'Foreign Key.  Defines a common naming suffix.  References \'common_suffix_id\' from the table \'common_suffix\'',
  `addr_title` VARCHAR(100) NULL COMMENT 'Defines the official job title of the subject.',
  `addr_org_id` INT UNSIGNED NULL COMMENT '',
  `addr_address_1` VARCHAR(255) NULL COMMENT 'Defines the primary address of the entry.',
  `addr_address_2` VARCHAR(255) NULL COMMENT 'Defines any additional address information of the entry',
  `addr_city` VARCHAR(255) NULL COMMENT 'Defines the city of the entry',
  `addr_state` INT UNSIGNED NULL COMMENT 'Defines the state of an entry',
  `addr_postcode` VARCHAR(10) NULL COMMENT 'Defines the post code of an entry',
  `addr_country` INT UNSIGNED NULL COMMENT 'Foreign Key.  Defines the country of the entry.  Referenced \'common_countries_id\' from table \'common_countries\'.',
  `addr_lat` FLOAT(10,6) NULL COMMENT '',
  `addr_lng` FLOAT(10,6) NULL COMMENT '',
  `addr_org_phone` VARCHAR(20) NULL COMMENT 'Defines the main phone number of entry.',
  `addr_org_phone_ext` VARCHAR(20) NULL COMMENT 'Defines main phone number extension for entry.',
  `addr_org_fax` VARCHAR(20) NULL COMMENT 'Define fax number for entry',
  `addr_direct` VARCHAR(20) NULL COMMENT 'Defines a direct dial number for entry.',
  `addr_mobile` VARCHAR(20) NULL COMMENT 'Defines a mobile phone number for entry.',
  `addr_email` VARCHAR(255) NULL COMMENT 'Defines an email address for entry.',
  `addr_url` VARCHAR(255) NULL COMMENT 'Defines a website for the entry.',
  `addr_admin_newsletter` TINYINT(1) NULL COMMENT 'A flagging field to determin if the entry should recieve a newsletter.',
  `addr_admin_calendars` TINYINT(1) NULL COMMENT 'A flagging field that will determine if a entry should recieve a end of year calendar mailing.',
  `addr_admin_gifts` TINYINT(1) NULL COMMENT 'A flagging field to define if the entry should recieve an end of year gift mailing',
  `addr_type_vendor` TINYINT(1) NULL COMMENT 'A flagging field to determin if the entry is a vendor.',
  `addr_type_client` TINYINT(1) NULL COMMENT 'A flagging field to determine if the entry is a client.',
  `addr_type_consultant` TINYINT(1) NULL COMMENT 'A flagging field to determine if an entry is a consultant',
  `addr_date_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `addr_date_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the entry.',
  PRIMARY KEY (`addr_id`)  COMMENT '',
  INDEX `fk_addr-states_idx` (`addr_state` ASC)  COMMENT '',
  INDEX `fk_addr-countries_idx` (`addr_country` ASC)  COMMENT '',
  INDEX `fk_addr-suffix_idx` (`addr_suffix` ASC)  COMMENT '',
  INDEX `fk_addr-prefix_idx` (`addr_prefix` ASC)  COMMENT '',
  INDEX `fk_addr-orgs_idx` (`addr_org_id` ASC)  COMMENT '',
  CONSTRAINT `fk_addr-states`
    FOREIGN KEY (`addr_state`)
    REFERENCES `OPSDev`.`common_usstates` (`common_usstates_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_addr-countries`
    FOREIGN KEY (`addr_country`)
    REFERENCES `OPSDev`.`common_countries` (`common_countries_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_addr-suffix`
    FOREIGN KEY (`addr_suffix`)
    REFERENCES `OPSDev`.`common_suffix` (`common_suffix_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_addr-prefix`
    FOREIGN KEY (`addr_prefix`)
    REFERENCES `OPSDev`.`common_prefix` (`common_prefix_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_addr-orgs`
    FOREIGN KEY (`addr_org_id`)
    REFERENCES `OPSDev`.`addr_orgs` (`addr_orgs_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'addr - Contains address book entries.  All related tables have \'addr\' prefix.';


-- -----------------------------------------------------
-- Table `OPSDev`.`employee_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`employee_status` (
  `employee_status_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `employee_status_desc` VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (`employee_status_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'employee_status - A lookup table containing all employee statuses';


-- -----------------------------------------------------
-- Table `OPSDev`.`security_acl_groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`security_acl_groups` (
  `security_acl_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `security_acl_desc` INT UNSIGNED NULL COMMENT '',
  `security_acl_permission` INT NULL COMMENT '',
  PRIMARY KEY (`security_acl_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OPSDev`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`employee` (
  `employee_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Employee ID.',
  `employee_fname` VARCHAR(30) NULL COMMENT 'Employee first name',
  `employee_lname` VARCHAR(30) NULL COMMENT 'Employee last name',
  `employee_mname` VARCHAR(30) NULL COMMENT 'Employee middle name (if any)',
  `employee_prefix` INT UNSIGNED NULL COMMENT 'Foreign Key to PREFIX table.  Name prefix.',
  `employee_suffix` INT UNSIGNED NULL COMMENT 'Foreign Key to SUFFIX table.  Name suffix',
  `employee_dob` DATE NULL COMMENT 'Date of Birth',
  `employee_addr_1` VARCHAR(150) NULL COMMENT 'Address line 1',
  `employee_addr_2` VARCHAR(150) NULL COMMENT 'Address Line 2',
  `employee_city` VARCHAR(150) NULL COMMENT 'City',
  `employee_state` INT UNSIGNED NULL COMMENT 'Foreign Key to USSATES table. Address state.',
  `employee_postcode` VARCHAR(6) NULL COMMENT 'Postcode',
  `employee_country` INT UNSIGNED NULL COMMENT 'Foreign key to COUNTRIES table. Address country.',
  `employee_home_phone` VARCHAR(20) NULL COMMENT 'Phone for home',
  `employee_mobile_phone` VARCHAR(20) NULL COMMENT 'Phone for mobile',
  `employee_hiredate` DATE NULL COMMENT 'Date of hire.',
  `employee_acl` INT NULL COMMENT 'Foreign Key to ACL table.  ACL level is the access level at which an employee can go.',
  `employee_status` INT NULL COMMENT 'Foreign key to EMPLOYEE_STATUS table.  Defines the employees current status.',
  `employee_subscription` INT(1) NULL COMMENT 'Does the employee want email subscription.',
  `employee_username` VARCHAR(50) NULL COMMENT 'Generated username',
  `employee_password` VARCHAR(60) NULL COMMENT 'Generated passwoed in BCRYPT format hash',
  `employee_created` DATETIME NULL COMMENT 'Initial creation date.',
  `employee_modified` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`employee_id`)  COMMENT '',
  INDEX `fk_common_usstates_state_idx` (`employee_state` ASC)  COMMENT '',
  INDEX `fk_common_countries_country_idx` (`employee_country` ASC)  COMMENT '',
  INDEX `fk_employee-prefix_idx` (`employee_prefix` ASC)  COMMENT '',
  INDEX `fk_employee-suffix_idx` (`employee_suffix` ASC)  COMMENT '',
  INDEX `fk_employee-status_idx` (`employee_status` ASC)  COMMENT '',
  INDEX `fk_employee-secacl_idx` (`employee_acl` ASC)  COMMENT '',
  CONSTRAINT `fk_employee-state`
    FOREIGN KEY (`employee_state`)
    REFERENCES `OPSDev`.`common_usstates` (`common_usstates_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee-country`
    FOREIGN KEY (`employee_country`)
    REFERENCES `OPSDev`.`common_countries` (`common_countries_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee-prefix`
    FOREIGN KEY (`employee_prefix`)
    REFERENCES `OPSDev`.`common_prefix` (`common_prefix_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee-suffix`
    FOREIGN KEY (`employee_suffix`)
    REFERENCES `OPSDev`.`common_suffix` (`common_suffix_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee-status`
    FOREIGN KEY (`employee_status`)
    REFERENCES `OPSDev`.`employee_status` (`employee_status_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee-secacl`
    FOREIGN KEY (`employee_acl`)
    REFERENCES `OPSDev`.`security_acl_groups` (`security_acl_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'employee - A table containing all the information related to an employee.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_passwords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_passwords` (
  `common_passwords_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_passwords_acct` VARCHAR(100) NOT NULL COMMENT '',
  `common_passwords_username` VARCHAR(100) NOT NULL COMMENT '',
  `common_passwords_password` VARCHAR(100) NOT NULL COMMENT '',
  `common_passwords_notes` TEXT NULL COMMENT '',
  `common_passwords_created` DATETIME NULL COMMENT '',
  `common_passwords_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`common_passwords_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_passwords - A table containing comany wide, non-sensitive passwords for global accounts world wide (i.e. FedEx, UPS, USPS)';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_status` (
  `work_status_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_status_desc` VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (`work_status_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'work_status - A lookup table of all work status that a Work assignment as well as independent phases under a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j` (
  `work_j_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a J phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_number` INT UNSIGNED NOT NULL COMMENT '',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the J phase.  Refers to values held in table \'work_status\'.',
  `work_j_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a J phase project.',
  `work_j_sow` TEXT NULL COMMENT 'Defines the statement of work for a J phase project.',
  `work_j_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the S phase entry was created.',
  PRIMARY KEY (`work_j_id`)  COMMENT '',
  INDEX `fk_work_status_id_idx` (`work_status_id` ASC)  COMMENT '',
  INDEX `fk_work_j-work_id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_j-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_j-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j - A child table that contains all relevant project information related J phase projects.  All child tables underneath this table will be begin with work_j_.\n\n';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c` (
  `work_c_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a C phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the C phase. Refers to values held in table \'work_status\'.',
  `work_c_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a J phase project.',
  `work_c_sow` TEXT NULL COMMENT 'Defines the statement of work for a J phase project.',
  `work_c_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_c_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the C phase entry was created.',
  PRIMARY KEY (`work_c_id`)  COMMENT '',
  INDEX `fk_work_c_status_id_idx` (`work_status_id` ASC)  COMMENT '',
  INDEX `fk_c_work-work_id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_c_work-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_c_work-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_c - A child table that contains all relevant project informatino related to C phase projects.  All child tables underneath this table will begin with work_c_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s` (
  `work_s_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a S phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the S phase.  Refers to values held in table \'work_status\'.',
  `work_s_percentcomp` DECIMAL(10,2) NULL COMMENT 'Defines a percentage of completion for the S phase.',
  `work_s_sow` TEXT NULL COMMENT 'Statement of work definition in text',
  `work_s_created` DATETIME NULL COMMENT 'Historical reference as to when a change to the S phase entry was created.',
  `work_s_update` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was created.',
  PRIMARY KEY (`work_s_id`)  COMMENT '',
  INDEX `fk_work_s-work_status_id_idx` (`work_status_id` ASC)  COMMENT '',
  INDEX `fk_work_s-work-id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s-work_status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s-work-id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_s - A child table that contains all relevant project informatino related to S phase projects.  All child tables underneath this table will begin with work_s_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p` (
  `work_p_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a P phase work project.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Defines the status of the P phase. Refers to values held in table \'work_status\'.',
  `work_p_fcv` DECIMAL(10,2) NULL DEFAULT 0.00 COMMENT 'Defines the Final contract value for a P phase project',
  `work_p_percentcomplete` DECIMAL(10,2) NULL COMMENT 'Defines the percentage of completion for a P phase project.',
  `work_p_sow` TEXT NULL COMMENT 'Defines the statement of work for a P phase project.',
  `work_p_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_p_update` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the P phase entry was created',
  PRIMARY KEY (`work_p_id`)  COMMENT '',
  INDEX `fk_work_p-status_id_idx` (`work_status_id` ASC)  COMMENT '',
  INDEX `fk_work_p-work_id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_p-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_p-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_p - A child table that contains all relevant project information related P phase projects.  All child tables underneath this table will be begin with work_p_.\n\nfcv - final contract value\n\n';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b` (
  `work_b_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Work B ID',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.  ',
  `work_status_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to WORK STATUS table.  Defines the status.',
  `work_b_fcv` DECIMAL(10,2) NULL DEFAULT 0.00 COMMENT 'Final Contract Value',
  `work_b_percentcomplete` DECIMAL(10,2) NULL COMMENT 'Percent Complete',
  `work_b_sow` TEXT NULL COMMENT 'Statement of Work',
  `work_b_created` DATETIME NULL COMMENT 'Initial creation date',
  `work_b_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_b_id`)  COMMENT '',
  INDEX `fk_work_b-status_id_idx` (`work_status_id` ASC)  COMMENT '',
  INDEX `fk_work_b-work_id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_b-status_id`
    FOREIGN KEY (`work_status_id`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_b-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b - A chile table that holds all relvant infomrionat related to B phase projects.  All child tables underneat this table will begin with work_b_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work` (
  `work_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for work entries.',
  `work_year` YEAR NULL COMMENT 'Defines the archive year of the project in YEAR only format',
  `work_number` INT UNSIGNED NOT NULL COMMENT 'Defines the job number suffix.  Format is YY-XXX',
  `work_title` TEXT NOT NULL COMMENT 'Defines the title of the job.',
  `work_client` INT UNSIGNED NOT NULL COMMENT 'Foreign key to the ADDR_ORGS table.',
  `work_client_rep` INT UNSIGNED NOT NULL COMMENT 'The name from the ADDR entry',
  `work_db` TINYINT(1) NULL COMMENT 'Defines if a project is a Design/Build project',
  `work_status` INT UNSIGNED NULL COMMENT 'Foreign Key that related to the work_status table.',
  `work_j_id` INT UNSIGNED NULL COMMENT 'Foreign Key to J phase.',
  `work_c_id` INT UNSIGNED NULL COMMENT 'Foreign key to C phase.',
  `work_p_id` INT UNSIGNED NULL COMMENT 'Foreign key to P phase.',
  `work_b_id` INT UNSIGNED NULL COMMENT 'Foreign key to B phase.',
  `work_s_id` INT UNSIGNED NULL COMMENT 'Foreign key to S phase.',
  `work_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was created.',
  PRIMARY KEY (`work_id`)  COMMENT '',
  INDEX `fk_work_status_idx` (`work_status` ASC)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_work_c_id_idx` (`work_c_id` ASC)  COMMENT '',
  INDEX `fk_work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  INDEX `fk_work_p_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_work_b_id_idx` (`work_b_id` ASC)  COMMENT '',
  INDEX `fk_work_client_id_idx` (`work_client_rep` ASC)  COMMENT '',
  INDEX `fk_client_id_idx` (`work_client` ASC)  COMMENT '',
  CONSTRAINT `fk_work_status`
    FOREIGN KEY (`work_status`)
    REFERENCES `OPSDev`.`work_status` (`work_status_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_client_id`
    FOREIGN KEY (`work_client`)
    REFERENCES `OPSDev`.`addr_orgs` (`addr_orgs_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_work_client_id`
    FOREIGN KEY (`work_client_rep`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work - The master table for all work/projects.  All child tables underneath this table will begin with the previd work_.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_team` (
  `work_j_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a individual memebers of a team.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the employee who is part of the team. References \'employee_id\' of the table \'employee\'.',
  `work_j_team_leader` TINYINT(1) NULL COMMENT 'A flagging field to define an individual as a team leader.',
  `work_j_team_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change has been made to the record.',
  PRIMARY KEY (`work_j_team_id`)  COMMENT '',
  INDEX `fk_employee_id_idx` (`employee_id` ASC)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_team-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_team - A child table that holds all related employees assigned to the J phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_consultants` (
  `work_j_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `addr_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_consultants_role` VARCHAR(45) NULL COMMENT '',
  `work_j_consultants_created` DATETIME NULL COMMENT '',
  `work_j_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_j_consultants_id`)  COMMENT '',
  INDEX `fk_addr_id_idx` (`addr_id` ASC)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_consultants-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_consultants - A child table that holds all related consultants that may be working on a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_eng_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_eng_milestones` (
  `common_eng_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a common engineering milestone label.',
  `common_eng_milestones_desc` VARCHAR(255) NULL COMMENT 'Defines the actual label value of the engineering milestone.',
  PRIMARY KEY (`common_eng_milestones_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_eng_milestones - A lookup table of the most common engineering milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_milestones` (
  `work_j_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for milestone enrty for a J phase work project.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_common_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines a labeling of a milestone entry.  References \'common_eng_milestones_id\' on table \'common_eng_milestones\'.',
  `work_j_milestones_value` DATE NULL COMMENT 'Defines the value of the milestone in a DATE format.',
  `work_j_milestones_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP  ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the entry was made.',
  PRIMARY KEY (`work_j_milestones_id`)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_common_eng_milestones_idx` (`work_j_common_milestones_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_milestones-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_milestones-milestones_id`
    FOREIGN KEY (`work_j_common_milestones_id`)
    REFERENCES `OPSDev`.`common_eng_milestones` (`common_eng_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_milestones - A child table that holds all milestone events for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_roles` (
  `common_roles_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identified for a common role.',
  `common_roles_desc` VARCHAR(255) NULL COMMENT 'Defines the label of a common role.',
  PRIMARY KEY (`common_roles_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_roles - A lookup table containing the most common job roles held within the company for any type of work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_manhours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_manhours` (
  `work_j_acct_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a manhour entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `common_roles_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the labeling for a manhour entry.  References \'common_roles_id\' on the table \'common_roles\'.',
  `work_j_accounting_est` INT NULL COMMENT 'Defines the estimated hours set aside for a project.',
  `work_j_accounting_act` INT NULL COMMENT 'Defines the acutal number of hours spent on a project.',
  PRIMARY KEY (`work_j_acct_id`)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_common_roles_id_idx` (`common_roles_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_manhours-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_manhours-roles_id`
    FOREIGN KEY (`common_roles_id`)
    REFERENCES `OPSDev`.`common_roles` (`common_roles_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_j_manhours - A child table that holds all programmed manhour information related to a J Phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_info` (
  `work_j_acct_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_acct_info_istm` TINYINT(1) NULL COMMENT '',
  `work_j_acct_info_contract_value` DECIMAL(15,2) NULL COMMENT '',
  `work_j_acct_info_created` DATETIME NULL COMMENT '',
  `work_j_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_j_acct_info_id`)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_acctinfo-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_info - A child table that holds all relevant accounting information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_actions` (
  `work_j_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for an action assignment entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines who was assigned to the task.  References \'employee_id\' from table \'employee\'.',
  `work_j_actions_assigned` DATE NULL COMMENT 'Defines the date the assignment was given.',
  `work_j_actions_due` DATE NULL COMMENT 'Defines the date the assignment is due to be completed.',
  `work_j_actions_date_completed` DATE NULL COMMENT 'Defines the actual date of completion.',
  `work_j_actions_task` TEXT NULL COMMENT 'Defines the task assigned in plain text.',
  `work_j_actions_comments` TEXT NULL COMMENT 'Defines any comments related to an action assignment in plain text.',
  `work_j_actions_is_complete` TINYINT(1) NULL COMMENT 'A flagging field that defines if a task has been accomplished.',
  `work_j_actions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_actions_id`)  COMMENT '',
  INDEX `fk_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_work_j_actions_employees_work_j_actions_assignedto_idx` (`work_j_actions_assignedto` ASC)  COMMENT '',
  CONSTRAINT `fk_j_actions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_actions-employees`
    FOREIGN KEY (`work_j_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_actions - A child table that holds all related action items/tasks for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`addr_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`addr_type` (
  `addr_type_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `addr_type_desc` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`addr_type_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'addr_type - A lookup table holding address classification types. Clients, vendors, or other.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_subcontractors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_subcontractors` (
  `work_c_subcontractors_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_c_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `addr_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_c_subcontractors_role` VARCHAR(100) NULL COMMENT '',
  `work_c_subcontractors_created` DATETIME NULL COMMENT '',
  `work_c_subcontractors_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_c_subcontractors_id`)  COMMENT '',
  INDEX `fk_work_c_subcontractors_work_c_work_c_id_idx` (`work_c_id` ASC)  COMMENT '',
  INDEX `fk_work_c_subcontractor_addr_addr_id_idx` (`addr_id` ASC)  COMMENT '',
  CONSTRAINT `fk_c_subcontractors-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_subcontractor-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_c_subcontractors - A child table that holds all related subcontractors that may be working on a C phase Work assignment';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_team` (
  `work_c_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_c_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `employee_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_c_team_leader` TINYINT(1) NULL COMMENT '',
  `work_c_team_created` DATETIME NULL COMMENT '',
  `work_c_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_c_team_id`)  COMMENT '',
  INDEX `fk_work_c_team_employeee_employee_id_idx` (`employee_id` ASC)  COMMENT '',
  INDEX `fk_work_c_team_work_c_work_c_id_idx` (`work_c_id` ASC)  COMMENT '',
  CONSTRAINT `fk_c_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_team-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_team - A child table that holds all related employees assigned to the C phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_cons_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_cons_milestones` (
  `common_cons_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_cons_milestones_desc` VARCHAR(255) NULL COMMENT '',
  PRIMARY KEY (`common_cons_milestones_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_cons_milestones - A lookup table of the most common construction milestones for construction.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_milestones` (
  `work_c_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_c_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `common_cons_milestones_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_c_milestones_value` DATE NULL COMMENT '',
  `work_c_milestones_created` DATETIME NULL COMMENT '',
  `work_c_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_c_milestones_id`)  COMMENT '',
  UNIQUE INDEX `work_c_milestones_created_UNIQUE` (`work_c_milestones_created` ASC)  COMMENT '',
  INDEX `fk_work_c_milestones_common_cons_milestones_common_cons_mil_idx` (`common_cons_milestones_id` ASC)  COMMENT '',
  INDEX `fk_work_c_milestones_work_c_work_c_id_idx` (`work_c_id` ASC)  COMMENT '',
  CONSTRAINT `fk_c_milestones-milestones_id`
    FOREIGN KEY (`common_cons_milestones_id`)
    REFERENCES `OPSDev`.`common_cons_milestones` (`common_cons_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_c_milestones-work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_milestones - A child table that holds  all milestone events for a C phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_c_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_c_discussions` (
  `work_c_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_c_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_c_discussions_entry` TEXT NULL COMMENT '',
  `work_c_discussions_created` DATETIME NULL COMMENT '',
  `work_c_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_c_discussions_id`)  COMMENT '',
  INDEX `fk_work_c_discussions_work_c_work_c_id_idx` (`work_c_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_c_discussions_work_c_work_c_id`
    FOREIGN KEY (`work_c_id`)
    REFERENCES `OPSDev`.`work_c` (`work_c_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_c_discussions - A child table that holds all relevant disuccsions for C phase Work assignment';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_discussions` (
  `work_j_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a discussion entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_discussions_entry` TEXT NULL COMMENT 'Defines the discussion value in plain text.',
  `work_j_discussions_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change was made to the record.',
  PRIMARY KEY (`work_j_discussions_id`)  COMMENT '',
  INDEX `fk_work_j_discussions_work_j_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_discussions-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_discussions - A child table that holds all relevant discussions for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_rfisubs_responses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_rfisubs_responses` (
  `common_rfisubs_responses_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_rfisubs_responses_type` INT(1) NULL COMMENT '',
  `common_rfisubs_responses_value` VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (`common_rfisubs_responses_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_rfisubs_responses - A lookup table containing the most typical RFI/Submittal responses.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisub_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisub_log` (
  `work_j_rfisub_log_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_rfisub_log_type` INT(1) NOT NULL COMMENT '',
  `work_j_rfisub_status` INT(1) NOT NULL DEFAULT 1 COMMENT '',
  `work_j_rfisub_internal_track` INT(5) NULL COMMENT '',
  `work_j_rfisubs_external_track` VARCHAR(45) NULL COMMENT '',
  `work_j_rfisubs_recievedby` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_rfisub_date_recieved` DATE NULL COMMENT '',
  `work_j_rfisub_log_qty_recieved` INT(3) NULL COMMENT '',
  `work_j_rfisub_log_due_date` DATE NULL COMMENT '',
  `work_j_rfisub_log_subject` VARCHAR(255) NULL COMMENT '',
  `work_j_rfisub_log_disposition` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_rfisub_log_notes` TEXT NULL COMMENT '',
  `work_j_rfisub_date_returned` DATE NULL COMMENT '',
  `work_j_rfisub_log_qty_returned` INT(3) NULL COMMENT '',
  `work_j_rfisub_log_created` DATETIME NULL COMMENT '',
  `work_j_rfisub_log_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_j_rfisub_log_id`)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_common_rfisubs_responses_work_j_rfisu_idx` (`work_j_rfisub_log_disposition` ASC)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_work_j_work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_employee_work_j_rfisubs_recievedby_idx` (`work_j_rfisubs_recievedby` ASC)  COMMENT '',
  CONSTRAINT `fk_j_rfisub-responses`
    FOREIGN KEY (`work_j_rfisub_log_disposition`)
    REFERENCES `OPSDev`.`common_rfisubs_responses` (`common_rfisubs_responses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-recievedby`
    FOREIGN KEY (`work_j_rfisubs_recievedby`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_rfisub_log - A Child table that holds all RFI/Submittal infromation for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_rfisubs_log_reviewers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_rfisubs_log_reviewers` (
  `work_j_rfisubs_log_reviewers_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_rfisubs_log_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_rfisubs_log_reviewers_employee` INT UNSIGNED NULL COMMENT '',
  `work_j_rfisubs_log_reviewers_consultants` INT UNSIGNED NULL COMMENT '',
  PRIMARY KEY (`work_j_rfisubs_log_reviewers_id`)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_reviewers_work_j_consulants_addr_work_idx` (`work_j_rfisubs_log_reviewers_consultants` ASC)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_reviewrs_employee_work_j_rfisubs_log__idx` (`work_j_rfisubs_log_reviewers_employee` ASC)  COMMENT '',
  INDEX `fk_work_j_rfisubs_log_reviewers_workj_rfisubs_log_work_j_lo_idx` (`work_j_rfisubs_log_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_rfisubs-consultants`
    FOREIGN KEY (`work_j_rfisubs_log_reviewers_consultants`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_rfisubs-employee`
    FOREIGN KEY (`work_j_rfisubs_log_reviewers_employee`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_j_rfisubs-log_id`
    FOREIGN KEY (`work_j_rfisubs_log_id`)
    REFERENCES `OPSDev`.`work_j_rfisub_log` (`work_j_rfisub_log_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_rfisubs_log_reviewers - A child table that holds all related reviewers of RFI/Submittal entries.';


-- -----------------------------------------------------
-- Table `OPSDev`.`log_letters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`log_letters` (
  `log_letters_id` INT UNSIGNED NOT NULL COMMENT '',
  `log_letters_number` INT(3) NULL COMMENT '',
  `log_letters_revision` INT(3) NULL COMMENT '',
  `log_letters_year` YEAR NULL COMMENT '',
  `work_id` INT UNSIGNED NULL COMMENT '',
  `log_letters_work_phase` VARCHAR(1) NULL COMMENT '',
  `log_letters_date_issued` DATE NULL COMMENT '',
  `log_letters_sent_to` VARCHAR(150) NULL COMMENT '',
  `log_letters_subject` VARCHAR(255) NULL COMMENT '',
  `log_letters_author` INT UNSIGNED NULL COMMENT '',
  `log_letters_created` DATETIME NULL COMMENT '',
  `log_letters_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`log_letters_id`)  COMMENT '',
  INDEX `fk_log_letter-author_idx` (`log_letters_author` ASC)  COMMENT '',
  INDEX `fk_log_letter-work_id_idx` (`work_id` ASC)  COMMENT '',
  CONSTRAINT `fk_log_letter-author`
    FOREIGN KEY (`log_letters_author`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_letter-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'log_letter - Contains all records of official CDE letters.  ';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_delays` (
  `work_j_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a work delay entry.',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_j_id\' on parent table \'work_j\'.',
  `work_j_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key. Refernces to \'work_id\' of parent table \'work\'.',
  `work_j_delays_reason` TEXT NULL COMMENT 'Defines the reason for a delay in plain text.',
  `work_j_delays_finalized_date` DATE NULL COMMENT 'Defines the date the delay was recognized.',
  `work_j_delays_cause` INT(1) NULL COMMENT 'A flagging field that will define if the delay was caused by an internal reason or an external reason (0 = Internal, 1 = external)',
  `work_j_delays_created` DATETIME NULL COMMENT 'Historical reference as to when the entry was created.',
  `work_j_delays_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a change to the record was performed.',
  PRIMARY KEY (`work_j_delays_id`)  COMMENT '',
  INDEX `fk_j_delays-work_j_id_idx` (`work_j_id` ASC)  COMMENT '',
  INDEX `fk_j_delays_work_j_milestones_id_idx` (`work_j_milestones_id` ASC)  COMMENT '',
  CONSTRAINT `fk_j_delays-work_j_id`
    FOREIGN KEY (`work_j_id`)
    REFERENCES `OPSDev`.`work_j` (`work_j_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_j_delays_work_j_milestones_id`
    FOREIGN KEY (`work_j_milestones_id`)
    REFERENCES `OPSDev`.`work_j_milestones` (`work_j_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_delays - A child tbale that holds all related work delay information for a J phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_prop_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_prop_milestones` (
  `common_prop_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_prop_milestones_desc` VARCHAR(255) NULL COMMENT '',
  PRIMARY KEY (`common_prop_milestones_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_prop_milestones - A lookup table of the most common proposal milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_milestones` (
  `work_p_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_common_milestones_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_milestones_value` DATE NULL COMMENT '',
  `work_p_milestones_created` DATETIME NULL COMMENT '',
  `work_p_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_milestones_id`)  COMMENT '',
  INDEX `fk_work_p_id-work_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_common_milestones-prop_ms_id_idx` (`work_p_common_milestones_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_p_id-work_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_common_milestones-prop_ms_id`
    FOREIGN KEY (`work_p_common_milestones_id`)
    REFERENCES `OPSDev`.`common_prop_milestones` (`common_prop_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_milestones - A child table that holds all milestone events for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_delays` (
  `work_p_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_milestones_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_delays_reason` TEXT NULL COMMENT '',
  `work_p_delays_finalized_date` DATE NULL COMMENT '',
  `work_p_delays_caused` INT(1) NULL COMMENT '',
  `work_p_created` DATETIME NULL COMMENT '',
  `work_p_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_delays_id`)  COMMENT '',
  INDEX `fk_p_delays-work_p_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_p_delays-milestones_id_idx` (`work_p_milestones_id` ASC)  COMMENT '',
  CONSTRAINT `fk_p_delays-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_delays-work_p_milestones_id`
    FOREIGN KEY (`work_p_milestones_id`)
    REFERENCES `OPSDev`.`work_p_milestones` (`work_p_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_delays - A child tbale that holds all related work delay information for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_discussions` (
  `work_p_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_discussions_entry` TEXT NULL COMMENT '',
  `work_p_discussions_created` DATETIME NULL COMMENT '',
  `work_p_discussions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_discussions_id`)  COMMENT '',
  INDEX `fk_p_discussions-work_p_id_idx` (`work_p_id` ASC)  COMMENT '',
  CONSTRAINT `fk_p_discussions-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_discussions - A child table that holds all relevant discussions for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_team` (
  `work_p_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `employee_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_team_leader` TINYINT(1) NULL COMMENT '',
  `work_p_team_created` DATETIME NULL COMMENT '',
  `work_p_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_team_id`)  COMMENT '',
  INDEX `fk_p_team-work_p_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_p_team-employee_id_idx` (`employee_id` ASC)  COMMENT '',
  CONSTRAINT `fk_p_team-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_team - A child table that holds all related employees assigned to the P phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_actions` (
  `work_p_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_actions_assignedto` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_actions_assigned` DATE NULL COMMENT '',
  `work_p_actions_due` DATE NULL COMMENT '',
  `work_p_actions_date_completed` DATE NULL COMMENT '',
  `work_p_actions_task` TEXT NULL COMMENT '',
  `work_p_actions_comments` TEXT NULL COMMENT '',
  `work_p_actions_is_complete` TINYINT(1) NULL COMMENT '',
  `work_p_actions_created` DATETIME NULL COMMENT '',
  `work_p_actions_timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_actions_id`)  COMMENT '',
  INDEX `fk_p_actions-p_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_p_actions_assignedto-employee_id_idx` (`work_p_actions_assignedto` ASC)  COMMENT '',
  CONSTRAINT `fk_p_actions-p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_actions_assignedto-employee_id`
    FOREIGN KEY (`work_p_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_actions - A child table that holds all related action items/tasks for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_consultants` (
  `work_p_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `addr_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_consultants_role` VARCHAR(45) NULL COMMENT '',
  `work_p_consultants_created` DATETIME NULL COMMENT '',
  `work_p_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_consultants_id`)  COMMENT '',
  INDEX `fk_p_consultants-p_id_idx` (`work_p_id` ASC)  COMMENT '',
  INDEX `fk_p_consultants-addr_id_idx` (`addr_id` ASC)  COMMENT '',
  CONSTRAINT `fk_p_consultants-p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_p_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_consultants - A child table that holds all related consultants that may be working on a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_p_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_p_acct_info` (
  `work_p_acct_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_p_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_p_acct_info_amt` DECIMAL(10,2) NULL COMMENT '',
  `work_p_acct_info_submitted` DATE NULL COMMENT '',
  `work_p_acct_info_isrevision` TINYINT(1) NULL COMMENT '',
  `work_p_acct_info_awarded` TINYINT(1) NULL COMMENT '',
  `work_p_acct_info_created` DATETIME NULL COMMENT '',
  `work_p_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_p_acct_id`)  COMMENT '',
  INDEX `fk_p_acct-work_p_id_idx` (`work_p_id` ASC)  COMMENT '',
  CONSTRAINT `fk_p_acct_info-work_p_id`
    FOREIGN KEY (`work_p_id`)
    REFERENCES `OPSDev`.`work_p` (`work_p_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_p_acct_info - A child table that holds all relevant accounting information for a P phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_support_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_support_milestones` (
  `common_support_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A uniquie identifier for a support milestone.',
  `common_support_milestones_desc` VARCHAR(45) NULL COMMENT 'The descriptive value of a single milestone.',
  PRIMARY KEY (`common_support_milestones_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_support_milestones - A lookup table of the most common support  milestones for work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_milestones` (
  `work_s_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a S phase milestone entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Reference to the master record in table \'work\'.',
  `work_s_common_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the descrptive labeling of a milestone.  References table \'common_support_milestones\'.',
  `work_s_milestones_value` DATE NULL COMMENT 'Defines the due date of the milestone.',
  `work_s_milestones_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_milestones_id`)  COMMENT '',
  INDEX `fk_work_s_milestones-common_milestones_id_idx` (`work_s_common_milestones_id` ASC)  COMMENT '',
  INDEX `fk_work_s_milestones-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_milestones-common_milestones_id`
    FOREIGN KEY (`work_s_common_milestones_id`)
    REFERENCES `OPSDev`.`common_support_milestones` (`common_support_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_milestones-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_milestones - A child table that holds all milestone events for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_delays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_delays` (
  `work_s_delays_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work delay entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_s_milestones_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References a milestone value that has been impacted by delay.  References \'work_s_milestones_id\' on table \'work_s_milestones\'.',
  `work_s_delays_reason` TEXT NULL COMMENT 'Reason for delay written in plain text.',
  `work_s_delays_finalized_date` DATE NULL COMMENT '',
  `work_s_delays_cause` INT(1) NULL COMMENT 'An identifier table to mark if a delay was caused by internal issues (value = 0) or external issues (value = 1)',
  `work_s_delays_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_delays_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_delays_id`)  COMMENT '',
  INDEX `fk_work_s_delays-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  INDEX `fk_work_s_delays-work_s_milestones_id_idx` (`work_s_milestones_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_delays-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_delays-work_s_milestones_id`
    FOREIGN KEY (`work_s_milestones_id`)
    REFERENCES `OPSDev`.`work_s_milestones` (`work_s_milestones_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_delays - A child tbale that holds all related work delay information for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_manhours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_manhours` (
  `work_s_manhours_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key. Unique identifier for a manhour entry in S phase.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_id\' on parent table \'work\'.',
  `common_roles_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines the label of the manhour entry.  References \'common_roles_id\' on table \'common_roles\'.',
  `work_s_manhours_accounting_est` INT NULL COMMENT 'Defines the values of ESTIMATED manhours prescribed for an S phase manhour entry.',
  `work_s_manhours_accounting_act` INT NULL COMMENT 'Defines the values of ACTUAL manhours prescribed for an S phase manhour entry.',
  PRIMARY KEY (`work_s_manhours_id`)  COMMENT '',
  INDEX `fk_work_s_manhours-common_roles_id_idx` (`common_roles_id` ASC)  COMMENT '',
  INDEX `fk_work_s_manhours-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_manhours-common_roles_id`
    FOREIGN KEY (`common_roles_id`)
    REFERENCES `OPSDev`.`common_roles` (`common_roles_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_manhours-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_manhours - A child table that holds all programmed manhour information related to a S Phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_discussions` (
  `work_s_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a S phase discussion entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_id\' on parent table \'work\'.',
  `work_s_discussions_entry` TEXT NULL COMMENT 'Discussion entry in plain text.',
  `work_s_discussions_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_discussions_updated` TIMESTAMP NULL COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_discussions_id`)  COMMENT '',
  INDEX `fk_work_s_discussions-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_discussions-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_discussions - A child table that holds all relevant discussions for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_actions` (
  `work_s_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for a action assignment entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'work_id\' on master table \'work\'.',
  `work_s_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines who an action task was assigned.  References \'employee_id\' from table \'employees\'.',
  `work_s_actions_assigned` DATE NULL COMMENT 'Defines the date the action assignment was assigned.',
  `work_s_actions_due` DATE NULL COMMENT 'Defines the due date of a particular action assignment entry.',
  `work_s_actions_date_completed` DATE NULL COMMENT 'Defines the actual date the action task was completed.',
  `work_s_actions_task` TEXT NULL COMMENT 'Definition of the task assigned in plain text.',
  `work_s_actions_comments` TEXT NULL COMMENT 'Defines any comments related to an action task entry.',
  `work_s_actions_is_complete` TINYINT(1) NULL COMMENT 'A flagging field to define if a item has been completed or not. (0 = false; 1 = true).',
  `work_s_actions_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_actions_id`)  COMMENT '',
  INDEX `fk_work_s_actions-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  INDEX `fk_work_s_assignedto-employee_id_idx` (`work_s_actions_assignedto` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_actions-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_assignedto-employee_id`
    FOREIGN KEY (`work_s_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_actions - A child table that holds all related action items/tasks for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_team` (
  `work_s_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work team entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References value \'work_s_id\' on parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References to \'work_id\' on master table \'work\'.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References a \'employee_id\' on the table \'employee\'.',
  `work_s_team_leader` TINYINT(1) NULL COMMENT 'A flagging field to designate the entry as the team leader (0 = false; 1 = true).',
  `work_s_team_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_team_id`)  COMMENT '',
  INDEX `fk_work_s_team-employee_id_idx` (`employee_id` ASC)  COMMENT '',
  INDEX `fk_work_s_team-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_team-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_team - A child table that holds all related employees assigned to the S phase of a Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_consultants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_consultants` (
  `work_s_consultants_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Unique identifier for S phase work consultant entry.',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References the \'work_s_id\' on the parent table \'work_s\'.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References the \'work_id\' value on the master table \'work\'.',
  `addr_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Defines a consultant for the entry.  References \'addr_id\' on the \'addr\' table.',
  `work_s_consultants_role` VARCHAR(45) NULL COMMENT 'Defines the role a consultant plays on the S phase in plain text.',
  `work_s_consultants_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_consultants_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_consultants_id`)  COMMENT '',
  INDEX `fk_work_s_consultants-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  INDEX `fk_work_s_consultants-addr_id_idx` (`addr_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_consultants-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_consultants-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_consultants - A child table that holds all related consultants that may be working on a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_acct_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_acct_info` (
  `work_s_acct_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_s_acct_info_istm` TINYINT(1) NULL COMMENT 'A flagging field to define if a S phase is a Time and Materials job.',
  `work_s_acct_info_pinv` DECIMAL(10,2) NULL COMMENT 'Defines the current amount invoiced.',
  `work_s_acct_info_last_invoice_date` DATE NULL COMMENT 'Defines the last date of invoice.',
  `work_s_acct_info_contract_value` DECIMAL(15,2) NULL COMMENT 'Defines the dollar amount of a S phase work.',
  `work_s_acct_info_amount_inv_todate` DECIMAL(15,2) NULL COMMENT 'Defines the acutal amount invoiced to date.',
  `work_s_acct_info_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_acct_info_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_acct_info_id`)  COMMENT '',
  INDEX `fk_work_s_acct_info-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_acct_info-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_acct_info - A child table that holds all relevant accounting information for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_rfisubs_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_rfisubs_log` (
  `work_s_rfisubs_log_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_s_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_s_rfisubs_log_type` INT(1) NOT NULL COMMENT 'Flagging field to define if an entry is a RFI or Submittal (0 = RFI; 1 = Submittal).',
  `work_s_rfisubs_log_status` INT NOT NULL COMMENT 'A flagging field to define the status of a RFILOG entery. (0 = closed; 1 = open)',
  `work_s_rfisubs_log_internal_track` INT(5) NULL COMMENT 'Defines a INTERNAL tracking number for the entry',
  `work_s_rfisubs_log_external_track` VARCHAR(45) NULL COMMENT 'Defines the EXTERNAL tracking number from client organization',
  `work_s_rfisubs_log_receivedby` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'employee_id\' on the table \'employee\'.',
  `work_s_rfisubs_log_qty_recieved` INT NULL COMMENT 'Defines the quantity of inquries recieved from other party.',
  `work_s_rfisubs_log_due_date` DATE NULL COMMENT 'Defines the due date of the entry.',
  `work_s_rfisubs_log_subject` VARCHAR(255) NULL COMMENT 'Defines the subject matter of the RFISUB entry.',
  `work_s_rfisubs_log_disposition` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  References \'common_rfisubs_responses_id\' on table \'common_rfisubs_responses\' table.',
  `work_s_rfisubs_log_notes` TEXT NULL COMMENT 'Defines and notes on the entry in plaintext.',
  `work_s_rfisubs_log_date_returned` DATE NULL COMMENT 'Defines the date the response was returned.',
  `work_s_rfisubs_log_qty_returned` INT(3) NULL COMMENT 'Defines the amount of responses returned',
  `work_s_rfisubs_log_created` DATETIME NULL COMMENT 'Historical reference as to when a particular milestone entry was created.',
  `work_s_rfisubs_log_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Historical reference as to when a particular milestone entry was last updated.',
  PRIMARY KEY (`work_s_rfisubs_log_id`)  COMMENT '',
  INDEX `fk_work_s_rfisubs_log-work_s_id_idx` (`work_s_id` ASC)  COMMENT '',
  INDEX `fk_work_s-rfisubs_log-employee_id_idx` (`work_s_rfisubs_log_receivedby` ASC)  COMMENT '',
  INDEX `fk_work_s_rfisubs_log-response_id_idx` (`work_s_rfisubs_log_disposition` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_rfisubs_log-work_s_id`
    FOREIGN KEY (`work_s_id`)
    REFERENCES `OPSDev`.`work_s` (`work_s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s-rfisubs_log-employee_id`
    FOREIGN KEY (`work_s_rfisubs_log_receivedby`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfisubs_log-response_id`
    FOREIGN KEY (`work_s_rfisubs_log_disposition`)
    REFERENCES `OPSDev`.`common_rfisubs_responses` (`common_rfisubs_responses_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_rfisub_log - A Child table that holds all RFI/Submittal infromation for a S phase Work assignment.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_s_rfisubs_log_reviewers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_s_rfisubs_log_reviewers` (
  `work_s_rfisubs_log_reviewers_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_s_rfisubs_log_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_s_rfisubs_log_reviewers_employee` INT UNSIGNED NULL COMMENT '',
  `work_s_rfisubs_log_reviewers_consultants` INT UNSIGNED NULL COMMENT '',
  PRIMARY KEY (`work_s_rfisubs_log_reviewers_id`)  COMMENT '',
  INDEX `fk_work_s_rfi-employee_id_idx` (`work_s_rfisubs_log_reviewers_employee` ASC)  COMMENT '',
  INDEX `fk_work_s_rfi-addr_ir_idx` (`work_s_rfisubs_log_reviewers_consultants` ASC)  COMMENT '',
  INDEX `fk_work_s_rfi-rfilog_id_idx` (`work_s_rfisubs_log_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_s_rfi-employee_id`
    FOREIGN KEY (`work_s_rfisubs_log_reviewers_employee`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfi-addr_ir`
    FOREIGN KEY (`work_s_rfisubs_log_reviewers_consultants`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_work_s_rfi-rfilog_id`
    FOREIGN KEY (`work_s_rfisubs_log_id`)
    REFERENCES `OPSDev`.`work_s_rfisubs_log` (`work_s_rfisubs_log_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_s_rfisubs_log_reviewers - A child table that holds all related reviewers of RFI/Submittal entries.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_work_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_work_tags` (
  `common_work_tags_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `common_work_tags_desc` VARCHAR(100) NOT NULL COMMENT '',
  PRIMARY KEY (`common_work_tags_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'common_work_tags - A lookup table of the most common tags that associate a work item or work phase to a definition.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_tags` (
  `work_tags_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  A unique identifier for a work tag entry.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Used to associate an entry to a particular work entry. References \'work_id\' from table \'work\'.',
  `common_work_tags_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key.  Used to define a tag that is associated to the entry.  References \'common_work_tags_id\' from table \'common_work_tags\'.',
  PRIMARY KEY (`work_tags_id`)  COMMENT '',
  INDEX `fk_work_tags-work_id_idx` (`work_id` ASC)  COMMENT '',
  INDEX `fk_common_tags-common_tags_id_idx` (`common_work_tags_id` ASC)  COMMENT '',
  CONSTRAINT `fk_work_tags-work_id`
    FOREIGN KEY (`work_id`)
    REFERENCES `OPSDev`.`work` (`work_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_common_tags-common_tags_id`
    FOREIGN KEY (`common_work_tags_id`)
    REFERENCES `OPSDev`.`common_work_tags` (`common_work_tags_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_tags - A table that holds tagging information for each work entry.';


-- -----------------------------------------------------
-- Table `OPSDev`.`security_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`security_sessions` (
  `security_sessions_id` BIGINT NOT NULL AUTO_INCREMENT COMMENT '',
  `employee_id` INT UNSIGNED NOT NULL COMMENT '',
  `security_sessions_key` VARCHAR(60) NOT NULL COMMENT '',
  `security_sessions_address` VARCHAR(200) NOT NULL COMMENT '',
  `security_sessions_useragent` VARCHAR(200) NOT NULL COMMENT '',
  `security_sessions_expires` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`security_sessions_id`)  COMMENT '',
  INDEX `fk_sec_empid_idx` (`employee_id` ASC)  COMMENT '',
  CONSTRAINT `fk_sec_empid`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_inv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_inv` (
  `work_j_acct_inv_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_acct_info_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_acct_inv_amount` DECIMAL(10,2) NULL COMMENT '',
  `work_j_acct_inv_date` DATE NULL COMMENT '',
  `work_j_acct_inv_ispaid` TINYINT(1) NULL COMMENT '',
  `work_j_acct_inv_created` DATETIME NULL COMMENT '',
  `work_j_acct_inv_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_j_acct_inv_id`)  COMMENT '',
  INDEX `fj_j_acct_inv-acct_info_id_idx` (`work_j_acct_info_id` ASC)  COMMENT '',
  CONSTRAINT `fj_j_acct_inv-acct_info_id`
    FOREIGN KEY (`work_j_acct_info_id`)
    REFERENCES `OPSDev`.`work_j_acct_info` (`work_j_acct_info_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'work_j_acct_inv - A child table that holds the records of invoices applied to the J phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_j_acct_subs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_j_acct_subs` (
  `work_j_acct_subs_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `work_j_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_id` INT UNSIGNED NOT NULL COMMENT '',
  `addr_id` INT UNSIGNED NOT NULL COMMENT '',
  `work_j_acct_subs_role` VARCHAR(45) NULL COMMENT '',
  `work_j_acct_subs_created` DATETIME NULL COMMENT '',
  `work_j_acct_subs_updated` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`work_j_acct_subs_id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'work_j_acct_subs - A child table that holds all subs assigned to work on a J phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_subcontractors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_subcontractors` (
  `work_b_subcontractors_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Subcontractor ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `addr_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to address table.  Defines the address of the subcontractor.',
  `work_b_subcontractors_role` TEXT NULL COMMENT 'Defines the role of subcontractor.',
  `work_b_subcontractors_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_subcontractors_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  `work_b_subcontractorscol` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`work_b_subcontractors_id`)  COMMENT '',
  INDEX `fk_b_subconsultants_work_id_idx` (`work_b_id` ASC)  COMMENT '',
  INDEX `fk_b_subcontractors_addr_id_idx` (`addr_id` ASC)  COMMENT '',
  CONSTRAINT `fk_b_subcontractors-work_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_subcontractors-addr_id`
    FOREIGN KEY (`addr_id`)
    REFERENCES `OPSDev`.`addr` (`addr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_subcontractor - A child table that holds all related subcontractors that participate in the B phase work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_team` (
  `work_b_team_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Team ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work_B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Employee table.  Defines a member of the team.',
  `work_b_team_leader` TINYINT(1) NULL COMMENT 'Defines a team leader',
  `work_b_team_created` DATETIME NULL COMMENT 'Initial creation date',
  `work_b_team_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_b_team_id`)  COMMENT '',
  INDEX `fk_b_team_work_id_idx` (`work_b_id` ASC)  COMMENT '',
  INDEX `fk_b_team_employee_id_idx` (`employee_id` ASC)  COMMENT '',
  CONSTRAINT `fk_b_team-work_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_team-employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_team - A child table that holds all the associated internal team members to a B phase project.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_discussions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_discussions` (
  `work_b_discussions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Discussion ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `work_b_discussions_entry` TEXT NULL COMMENT 'Discussion entry.',
  `work_b_discussions_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_discussions_updated` TIMESTAMP NOT NULL COMMENT '',
  PRIMARY KEY (`work_b_discussions_id`, `work_b_discussions_updated`)  COMMENT '',
  INDEX `fk_b_discussions-work_b_id_idx` (`work_b_id` ASC)  COMMENT '',
  CONSTRAINT `fk_b_discussions-work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_discussions - A child table that holds all discussions related to the B phase work.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_actions` (
  `work_b_actions_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Actions ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work_B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table',
  `work_b_actions_assignedto` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to the Employee table.  Dictates whom the action was assigned to.',
  `work_b_actions_assigned` DATE NULL COMMENT 'Date assigned.',
  `work_b_actions_date_completed` DATE NULL COMMENT 'Date completed.',
  `work_b_actions_task` TEXT NULL COMMENT 'Details of the Task.',
  `work_b_actions_comments` TEXT NULL COMMENT 'Comments about task.',
  `work_b_actions_is_complete` TINYINT(1) NULL COMMENT 'Marks an action as complete.',
  `work_b_actions_created` DATETIME NULL COMMENT 'Initial creation date.',
  `work_b_actions_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_b_actions_id`)  COMMENT '',
  INDEX `fk_b_actions-work_b_id_idx` (`work_b_id` ASC)  COMMENT '',
  INDEX `fk_b_actions-employee_id_idx` (`work_b_actions_assignedto` ASC)  COMMENT '',
  CONSTRAINT `fk_b_actions-work_b_id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_actions-employee_id`
    FOREIGN KEY (`work_b_actions_assignedto`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_actions - A child table that contains all register of actions.';


-- -----------------------------------------------------
-- Table `OPSDev`.`work_b_milestones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`work_b_milestones` (
  `work_b_milestones_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Work B Milestons ID.',
  `work_b_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work B table.',
  `work_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Work table.',
  `work_b_milestones_common_id` INT UNSIGNED NOT NULL COMMENT 'Foreign Key to Common Cons Milestones table.',
  `work_b_milestones_value` DATE NULL COMMENT 'Date of milestone.',
  `work_b_milestones_created` DATETIME NULL COMMENT 'Initial date created.',
  `work_b_milestones_updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`work_b_milestones_id`)  COMMENT '',
  INDEX `fk_b_milestones-common_cons_milestones_id_idx` (`work_b_milestones_common_id` ASC)  COMMENT '',
  INDEX `fk_b_milestones-b-id_idx` (`work_b_id` ASC)  COMMENT '',
  CONSTRAINT `fk_b_milestones-common_cons_milestones_id`
    FOREIGN KEY (`work_b_milestones_common_id`)
    REFERENCES `OPSDev`.`common_cons_milestones` (`common_cons_milestones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_b_milestones-b-id`
    FOREIGN KEY (`work_b_id`)
    REFERENCES `OPSDev`.`work_b` (`work_b_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'work_b_milestones - A child table that holds all relevant milestones related to a B phase project.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
