-- MySQL Script generated by MySQL Workbench
-- 10/06/17 11:55:51
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OPSDev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OPSDev` DEFAULT CHARACTER SET utf8 ;
USE `OPSDev` ;

-- -----------------------------------------------------
-- Table `OPSDev`.`common_usstates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_usstates` (
  `common_usstates_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_usstates_abbr` VARCHAR(2) NULL,
  `common_usstates_full` VARCHAR(45) NULL,
  PRIMARY KEY (`common_usstates_id`))
ENGINE = InnoDB
COMMENT = 'common_usstates - A lookup table containing the two letter abbreviation and complete spelling of US states.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_countries` (
  `common_countries_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_countries_abbr` VARCHAR(2) NULL,
  `common_countries_full` VARCHAR(80) NULL,
  `common_countries_proper` VARCHAR(80) NULL,
  `common_countries_iso3` CHAR(3) NULL,
  `common_countries_numcode` SMALLINT(6) NULL,
  `common_countries_phonecode` INT(3) NULL,
  `common_countries_idd` INT(3) NULL,
  PRIMARY KEY (`common_countries_id`))
ENGINE = InnoDB
COMMENT = 'common_countries - A lookup table holding two letter abbreviations and full spelings of countries throughout the world.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_prefix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_prefix` (
  `common_prefix_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_prefix_abbr` VARCHAR(45) NULL,
  `common_prefix_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`common_prefix_id`))
ENGINE = InnoDB
COMMENT = 'common_prefix - A lookup table of the most common name prefixes.';


-- -----------------------------------------------------
-- Table `OPSDev`.`common_suffix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`common_suffix` (
  `common_suffix_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `common_suffix_abbr` VARCHAR(45) NULL,
  `common_suffix_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`common_suffix_id`))
ENGINE = InnoDB
COMMENT = 'common_prefix - A lookup table of the most common name suffixes.';


-- -----------------------------------------------------
-- Table `OPSDev`.`employee_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`employee_status` (
  `employee_status_id` INT NOT NULL AUTO_INCREMENT,
  `employee_status_desc` VARCHAR(100) NULL,
  PRIMARY KEY (`employee_status_id`))
ENGINE = InnoDB
COMMENT = 'employee_status - A lookup table containing all employee statuses';


-- -----------------------------------------------------
-- Table `OPSDev`.`security_acl_groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`security_acl_groups` (
  `security_acl_id` INT NOT NULL AUTO_INCREMENT,
  `security_acl_desc` INT UNSIGNED NULL,
  `security_acl_permission` INT NULL,
  PRIMARY KEY (`security_acl_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OPSDev`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`employee` (
  `employee_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Primary Key.  Employee ID.',
  `employee_fname` VARCHAR(30) NULL COMMENT 'Employee first name',
  `employee_lname` VARCHAR(30) NULL COMMENT 'Employee last name',
  `employee_mname` VARCHAR(30) NULL COMMENT 'Employee middle name (if any)',
  `employee_prefix` INT UNSIGNED NULL COMMENT 'Foreign Key to PREFIX table.  Name prefix.',
  `employee_suffix` INT UNSIGNED NULL COMMENT 'Foreign Key to SUFFIX table.  Name suffix',
  `employee_dob` DATE NULL COMMENT 'Date of Birth',
  `employee_addr_1` VARCHAR(150) NULL COMMENT 'Address line 1',
  `employee_addr_2` VARCHAR(150) NULL COMMENT 'Address Line 2',
  `employee_city` VARCHAR(150) NULL COMMENT 'City',
  `employee_state` INT UNSIGNED NULL COMMENT 'Foreign Key to USSATES table. Address state.',
  `employee_postcode` VARCHAR(6) NULL COMMENT 'Postcode',
  `employee_country` INT UNSIGNED NULL COMMENT 'Foreign key to COUNTRIES table. Address country.',
  `employee_home_phone` VARCHAR(20) NULL COMMENT 'Phone for home',
  `employee_mobile_phone` VARCHAR(20) NULL COMMENT 'Phone for mobile',
  `employee_hiredate` DATE NULL COMMENT 'Date of hire.',
  `employee_acl` INT NULL COMMENT 'Foreign Key to ACL table.  ACL level is the access level at which an employee can go.',
  `employee_status` INT NULL COMMENT 'Foreign key to EMPLOYEE_STATUS table.  Defines the employees current status.',
  `employee_subscription` INT(1) NULL COMMENT 'Does the employee want email subscription.',
  `employee_username` VARCHAR(50) NULL COMMENT 'Generated username',
  `employee_password` VARCHAR(60) NULL COMMENT 'Generated passwoed in BCRYPT format hash',
  `employee_created` DATETIME NULL COMMENT 'Initial creation date.',
  `employee_modified` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`employee_id`),
  INDEX `fk_common_usstates_state_idx` (`employee_state` ASC),
  INDEX `fk_common_countries_country_idx` (`employee_country` ASC),
  INDEX `fk_employee-prefix_idx` (`employee_prefix` ASC),
  INDEX `fk_employee-suffix_idx` (`employee_suffix` ASC),
  INDEX `fk_employee-status_idx` (`employee_status` ASC),
  INDEX `fk_employee-secacl_idx` (`employee_acl` ASC),
  CONSTRAINT `fk_employee-state`
    FOREIGN KEY (`employee_state`)
    REFERENCES `OPSDev`.`common_usstates` (`common_usstates_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee-country`
    FOREIGN KEY (`employee_country`)
    REFERENCES `OPSDev`.`common_countries` (`common_countries_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee-prefix`
    FOREIGN KEY (`employee_prefix`)
    REFERENCES `OPSDev`.`common_prefix` (`common_prefix_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee-suffix`
    FOREIGN KEY (`employee_suffix`)
    REFERENCES `OPSDev`.`common_suffix` (`common_suffix_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee-status`
    FOREIGN KEY (`employee_status`)
    REFERENCES `OPSDev`.`employee_status` (`employee_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee-secacl`
    FOREIGN KEY (`employee_acl`)
    REFERENCES `OPSDev`.`security_acl_groups` (`security_acl_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'employee - A table containing all the information related to an employee.';


-- -----------------------------------------------------
-- Table `OPSDev`.`security_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OPSDev`.`security_sessions` (
  `security_sessions_id` BIGINT NOT NULL AUTO_INCREMENT,
  `employee_id` INT UNSIGNED NOT NULL,
  `security_sessions_key` VARCHAR(60) NOT NULL,
  `security_sessions_address` VARCHAR(200) NOT NULL,
  `security_sessions_useragent` VARCHAR(200) NOT NULL,
  `security_sessions_expires` DATETIME NOT NULL,
  PRIMARY KEY (`security_sessions_id`),
  INDEX `fk_sec_empid_idx` (`employee_id` ASC),
  CONSTRAINT `fk_sec_empid`
    FOREIGN KEY (`employee_id`)
    REFERENCES `OPSDev`.`employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
